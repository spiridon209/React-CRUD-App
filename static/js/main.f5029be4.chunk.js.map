{"version":3,"sources":["redux/redusers/auth.js","redux/actions/actionTypes.js","redux/redusers/createArticle.js","redux/redusers/getArticles.js","redux/redusers/updateArticle.js","redux/redusers/deleteArticle.js","redux/redusers/rootReduser.js","serviceWorker.js","api/rootApiUrl.js","api/authRequest.js","redux/actions/auth.js","components/RegForm/formSchema.js","components/ServerErrors/ServerErrors.jsx","components/RegForm/RegForm.jsx","components/AuthForm/AuthForm.jsx","components/UserBio/UserBio.jsx","api/createArticle.js","redux/actions/createArticle.js","components/CreateArticle/createArticleSchema.js","components/CreateArticle/CreateArticle.jsx","hoc/Layout/Layout.jsx","api/getArticlesList.js","api/favoriteUnfavoriteArticle.js","redux/actions/getArticles.js","api/getArticle.js","api/deleteArticle.js","components/Article/Article.jsx","redux/actions/deleteArticle.js","components/ArticlePreview/ArticlePreview.jsx","components/ArticlesPagination/ArticlesPagination.jsx","components/ArticleList/ArticleList.jsx","components/Navigation/Navigation.jsx","components/ArticleEditor/updateArticleSchema.js","api/updateArticle.js","components/ArticleEditor/ArticleEditor.jsx","redux/actions/updateArticle.js","App.jsx","index.jsx"],"names":["initialState","token","username","email","id","errors","isProcessing","isLogIn","authReduser","state","action","type","payload","createArticleReduser","articles","isLoading","articlesCount","currentPage","getArticlesReducer","article","map","art","slug","favorited","favoritesCount","updateArticleReduser","deleteArticleReduser","combineReducers","auth","authReducer","createArticle","getArticles","updateArticle","updateArticleReducer","deleteArticle","deleteArticleReducer","Boolean","window","location","hostname","match","rootApiUrl","authFetch","data","a","authUrl","axios","post","user","response","regFetch","regUrl","autoLogInFetch","headers","autoLogInUrl","get","authRequest","authSuccess","localStorage","setItem","authFailure","logOut","removeItem","formSchema","Yup","shape","max","required","password","min","matches","connect","serverErrors","props","errorsList","className","Object","keys","error","index","key","_","uniqueId","WarningTwoTone","twoToneColor","initialValues","isAuth","dispatch","regFunc","mail","name","reg","resetErrorsFunc","renderInput","label","values","handleChange","handleBlur","touched","htmlFor","placeholder","onChange","onBlur","value","style","borderColor","validationSchema","onSubmit","actions","resetForm","handleSubmit","loading","htmlType","to","process","onClick","authFunc","logOutFunc","logOutHandler","createArticleUrl","createArticleFetch","getItem","Authorization","createArticleFailure","createArticleSchema","title","description","content","tags","TextArea","Input","createArticleFunc","createArticleSuccess","useState","setResponse","Component","tagList","split","body","err","Layout","children","getArticlesFetch","offset","getArticlesListUrl","favoriteArticleFetch","favoriteArticleUrl","unfavoriteArticleFetch","delete","getArticlesFailure","articleFavorited","favoriteArticle","unfavoriteArticle","getArticleFetch","getArticleListUrl","deleteArticleFetch","deleteArticleUrl","deleteProcessing","favoriteArticleFunc","unfavoriteArticleFunc","deleteArticleFunc","deleteAticleFetch","withRouter","params","setArticle","history","useHistory","useEffect","then","updatedArticle","likeBtnState","Date","createdAt","toDateString","author","tag","evt","preventDefault","stopPropagation","LikeTwoTone","push","danger","answer","status","toArticlePage","onKeyDown","role","tabIndex","switchPage","showSizeChanger","current","total","page","Math","floor","getArticlesFunc","ArticlesPagination","Navigation","links","exact","updateArticleSchema","updateArticleFetch","updateArticleUrl","put","updateArticleFunc","updateAticleFetch","length","join","autoLogInFunc","TOKEN","routes","path","component","ArticleList","Article","RegForm","AuthForm","CreateArticle","ArticleEditor","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","rootReducer","applyMiddleware","thunk","app","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","console","message"],"mappings":"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","file":"static/js/main.f5029be4.chunk.js","sourcesContent":["import {\r\n  AUTH_REQUEST,\r\n  AUTH_FAILURE,\r\n  AUTH_SUCCESS,\r\n  LOG_OUT,\r\n  RESET_ERRORS,\r\n} from '../actions/actionTypes';\r\n\r\nconst initialState = {\r\n  token: null,\r\n  username: '',\r\n  email: '',\r\n  id: null,\r\n  errors: '',\r\n  isProcessing: false,\r\n  isLogIn: false,\r\n};\r\n\r\nconst authReduser = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case AUTH_REQUEST: {\r\n      const {\r\n        payload: { isProcessing },\r\n      } = action;\r\n      return { ...state, isProcessing };\r\n    }\r\n\r\n    case AUTH_SUCCESS: {\r\n      const { payload } = action;\r\n      return { ...state, ...payload };\r\n    }\r\n\r\n    case AUTH_FAILURE: {\r\n      const {\r\n        payload: { errors, isProcessing },\r\n      } = action;\r\n      return { ...state, errors, isProcessing };\r\n    }\r\n\r\n    case LOG_OUT:\r\n    case RESET_ERRORS:\r\n      return initialState;\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default authReduser;\r\n","export const AUTH_REQUEST = 'AUTH_REQUEST';\nexport const AUTH_FAILURE = 'AUTH_FAILURE';\nexport const AUTH_SUCCESS = 'AUTH_SUCCES';\n\nexport const LOG_OUT = 'LOG_OUT';\nexport const RESET_ERRORS = 'RESET_ERRORS';\n\nexport const CREATE_ARTICLE_REQUEST = 'CREATE_ARTICLE_REQUEST';\nexport const CREATE_ARTICLE_FAILURE = 'CREATE_ARTICLE_FAILURE';\nexport const CREATE_ARTICLE_SUCCESS = 'CREATE_ARTICLE_SUCCES';\n\nexport const UPDATE_ARTICLE_REQUEST = 'UPDATE_ARTICLE_REQUEST';\nexport const UPDATE_ARTICLE_FAILURE = 'UPDATE_ARTICLE_FAILURE';\nexport const UPDATE_ARTICLE_SUCCESS = 'UPDATE_ARTICLE_SUCCES';\n\nexport const DELETE_ARTICLE_REQUEST = 'DELETE_ARTICLE_REQUEST';\nexport const DELETE_ARTICLE_FAILURE = 'DELETE_ARTICLE_FAILURE';\nexport const DELETE_ARTICLE_SUCCESS = 'DELETE_ARTICLE_SUCCES';\n\nexport const GET_ARTICLES_REQUEST = 'GET_ARTICLES_REQUEST';\nexport const GET_ARTICLES_FAILURE = 'GET_ARTICLES_FAILURE';\nexport const GET_ARTICLES_SUCCESS = 'GET_ARTICLES_SUCCES';\n\nexport const ARTICLE_FAVORITED = 'ARTICLE_FAVORITED';\nexport const ARTICLE_UNFAVORITED = 'ARTICLE_UNFAVORITED';\n\nexport const ARTICLES_PAGINATION = 'ARTICLES_PAGINATION';\n","import {\n  CREATE_ARTICLE_REQUEST,\n  CREATE_ARTICLE_FAILURE,\n  CREATE_ARTICLE_SUCCESS,\n} from '../actions/actionTypes';\n\nconst initialState = {\n  isProcessing: false,\n  errors: '',\n};\n\nconst createArticleReduser = (state = initialState, action) => {\n  switch (action.type) {\n    case CREATE_ARTICLE_REQUEST: {\n      return { ...state, isProcessing: true };\n    }\n\n    case CREATE_ARTICLE_SUCCESS: {\n      return {\n        ...state,\n        isProcessing: false,\n      };\n    }\n\n    case CREATE_ARTICLE_FAILURE: {\n      const { payload } = action;\n      return { ...state, errors: payload, isProcessing: false };\n    }\n\n    default:\n      return state;\n  }\n};\n\nexport default createArticleReduser;\n","import {\n  GET_ARTICLES_REQUEST,\n  GET_ARTICLES_SUCCESS,\n  GET_ARTICLES_FAILURE,\n  ARTICLE_FAVORITED,\n  ARTICLE_UNFAVORITED,\n  ARTICLES_PAGINATION,\n} from '../actions/actionTypes';\n\nconst initialState = {\n  articles: [],\n  isLoading: false,\n  errors: '',\n  articlesCount: 0,\n  currentPage: 1,\n};\n\nconst getArticlesReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case GET_ARTICLES_REQUEST: {\n      return { ...state, isLoading: true };\n    }\n    case GET_ARTICLES_SUCCESS: {\n      const {\n        payload: { articles, articlesCount },\n      } = action;\n      return { ...state, isLoading: false, articles, articlesCount };\n    }\n    case GET_ARTICLES_FAILURE: {\n      const {\n        payload: { errors },\n      } = action;\n      return { ...state, errors, isLoading: false };\n    }\n    case ARTICLE_FAVORITED:\n    case ARTICLE_UNFAVORITED: {\n      const {\n        payload: { article },\n      } = action;\n      const { articles } = state;\n      return {\n        ...state,\n\n        articles: articles.map((art) => {\n          if (art.slug === article.slug) {\n            return {\n              ...article,\n              favorited: article.favorited,\n              favoritesCount: article.favoritesCount,\n            };\n          }\n          return art;\n        }),\n      };\n    }\n    case ARTICLES_PAGINATION: {\n      const {\n        payload: { currentPage },\n      } = action;\n      return {\n        ...state,\n        currentPage,\n      };\n    }\n    default:\n      return state;\n  }\n};\n\nexport default getArticlesReducer;\n","import {\n  UPDATE_ARTICLE_REQUEST,\n  UPDATE_ARTICLE_FAILURE,\n  UPDATE_ARTICLE_SUCCESS,\n} from '../actions/actionTypes';\n\nconst initialState = {\n  isProcessing: false,\n\n  errors: '',\n};\n\nconst updateArticleReduser = (state = initialState, action) => {\n  switch (action.type) {\n    case UPDATE_ARTICLE_REQUEST: {\n      return { ...state, isProcessing: true };\n    }\n\n    case UPDATE_ARTICLE_SUCCESS: {\n      return {\n        ...state,\n        isProcessing: false,\n      };\n    }\n\n    case UPDATE_ARTICLE_FAILURE: {\n      const { payload } = action;\n      return { ...state, errors: payload, isProcessing: false };\n    }\n\n    default:\n      return state;\n  }\n};\n\nexport default updateArticleReduser;\n","import {\n  DELETE_ARTICLE_REQUEST,\n  DELETE_ARTICLE_FAILURE,\n  DELETE_ARTICLE_SUCCESS,\n} from '../actions/actionTypes';\n\nconst initialState = {\n  isProcessing: false,\n  errors: '',\n};\n\nconst deleteArticleReduser = (state = initialState, action) => {\n  switch (action.type) {\n    case DELETE_ARTICLE_REQUEST: {\n      return { ...state, isProcessing: true };\n    }\n\n    case DELETE_ARTICLE_SUCCESS: {\n      return {\n        ...state,\n        isProcessing: false,\n      };\n    }\n\n    case DELETE_ARTICLE_FAILURE: {\n      const { payload } = action;\n      return { ...state, errors: payload, isProcessing: false };\n    }\n\n    default:\n      return state;\n  }\n};\n\nexport default deleteArticleReduser;\n","import { combineReducers } from 'redux';\nimport authReducer from './auth';\nimport createArticleReduser from './createArticle';\nimport getArticlesReducer from './getArticles';\nimport updateArticleReducer from './updateArticle';\nimport deleteArticleReducer from './deleteArticle';\n\nexport default combineReducers({\n  auth: authReducer,\n  createArticle: createArticleReduser,\n  getArticles: getArticlesReducer,\n  updateArticle: updateArticleReducer,\n  deleteArticle: deleteArticleReducer,\n});\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","const rootApiUrl = 'https://conduit.productionready.io/api';\n\nexport default rootApiUrl;\n","import axios from 'axios';\nimport rootApiUrl from './rootApiUrl';\n\nexport const authFetch = async (data) => {\n  const authUrl = `${rootApiUrl}/users/login`;\n  const response = await axios.post(authUrl, {\n    user: data,\n  });\n  return response;\n};\n\nexport const regFetch = async (data) => {\n  const regUrl = `${rootApiUrl}/users`;\n  const response = await axios.post(regUrl, {\n    user: data,\n  });\n  return response;\n};\n\nexport const autoLogInFetch = async (headers) => {\n  const autoLogInUrl = `${rootApiUrl}/user`;\n  const response = await axios.get(autoLogInUrl, { headers });\n  return response;\n};\n","import { authFetch, regFetch, autoLogInFetch } from '../../api/authRequest';\r\nimport { AUTH_REQUEST, AUTH_FAILURE, AUTH_SUCCESS, LOG_OUT, RESET_ERRORS } from './actionTypes';\r\n\r\nexport const authRequest = (isProcessing) => {\r\n  return {\r\n    type: AUTH_REQUEST,\r\n    payload: { isProcessing },\r\n  };\r\n};\r\n\r\nexport const authSuccess = (username, email, token, id, isLogIn = true, isProcessing = false) => {\r\n  localStorage.setItem('token', token);\r\n  localStorage.setItem('userId', id);\r\n  return {\r\n    type: AUTH_SUCCESS,\r\n    payload: { username, email, token, id, isLogIn, isProcessing },\r\n  };\r\n};\r\n\r\nexport const authFailure = (errors, isProcessing = false) => {\r\n  return { type: AUTH_FAILURE, payload: { errors, isProcessing } };\r\n};\r\n\r\nexport const auth = (mail, password) => {\r\n  return async (dispatch) => {\r\n    dispatch(authRequest(true));\r\n    try {\r\n      const response = await authFetch({ email: mail, password });\r\n      const { username, email, token, id } = response.data.user;\r\n      dispatch(authSuccess(username, email, token, id));\r\n    } catch (err) {\r\n      dispatch(authFailure(err.response.data.errors));\r\n    }\r\n  };\r\n};\r\n\r\nexport const reg = (mail, password, name) => {\r\n  return async (dispatch) => {\r\n    dispatch(authRequest(true));\r\n    try {\r\n      const response = await regFetch({\r\n        username: name,\r\n        email: mail,\r\n        password,\r\n      });\r\n      const { username, email, token, id } = response.data.user;\r\n      dispatch(authSuccess(username, email, token, id));\r\n    } catch (err) {\r\n      dispatch(authFailure(err.response.data.errors));\r\n    }\r\n  };\r\n};\r\n\r\nexport const logOut = () => {\r\n  localStorage.removeItem('token');\r\n  localStorage.removeItem('userId');\r\n  return {\r\n    type: LOG_OUT,\r\n  };\r\n};\r\n\r\nexport const autoLogIn = () => {\r\n  return async (dispatch) => {\r\n    dispatch(authRequest(true));\r\n    try {\r\n      const TOKEN = localStorage.getItem('token');\r\n      if (!TOKEN) {\r\n        dispatch(logOut());\r\n        return;\r\n      }\r\n      const headers = { Authorization: `Token ${TOKEN}` };\r\n      const response = await autoLogInFetch(headers);\r\n      const { username, email, token, id } = response.data.user;\r\n      dispatch(authSuccess(username, email, token, id));\r\n    } catch (err) {\r\n      dispatch(authFailure(err.response.data.errors));\r\n    }\r\n  };\r\n};\r\n\r\nexport const resetErrors = () => {\r\n  return {\r\n    type: RESET_ERRORS,\r\n  };\r\n};\r\n","import * as Yup from 'yup';\n\nconst formSchema = Yup.object().shape({\n  username: Yup.string().max(20, 'Must be shorter').required('Required'),\n  email: Yup.string().email('Invalid email address').required('Required'),\n  password: Yup.string()\n    .min(8, 'Must be longer than 8 characters')\n    .max(40, 'Must be shorter')\n    .matches(\n      /^(?=.*[a-z])(?=.*[A-Z])(?=.*\\d)[a-zA-Z\\d]{8,}$/,\n      'Must have one Big or more letter and one or more number'\n    )\n    .required('Required'),\n});\nexport default formSchema;\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport { WarningTwoTone } from '@ant-design/icons';\nimport PropTypes from 'prop-types';\nimport _ from 'lodash';\nimport './ServerErrors.scss';\n\nconst ServerErrors = (props) => {\n  const { serverErrors } = props;\n\n  if (!serverErrors) {\n    return null;\n  }\n\n  const errorsList = (\n    <ul className=\"ServerErrors\">\n      {Object.keys(serverErrors).map((error, index) => (\n        <li key={_.uniqueId(index)} className=\"ServerErrors-Item\">\n          <WarningTwoTone twoToneColor=\"#cf1322\" />\n          <span className=\"ServerErrors-ItemText\">{`${error}: ${serverErrors[error]}`}</span>\n        </li>\n      ))}\n    </ul>\n  );\n\n  return <div className=\"ServerErrorsWrap\">{errorsList}</div>;\n};\n\nconst mapStateToProps = (state) => {\n  return {\n    serverErrors: state.auth.errors,\n  };\n};\n\nServerErrors.propTypes = {\n  serverErrors: PropTypes.oneOfType([PropTypes.string, PropTypes.object]).isRequired,\n};\n\nexport default connect(mapStateToProps)(ServerErrors);\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport { Input, Button } from 'antd';\nimport { NavLink } from 'react-router-dom';\nimport { Formik, Form } from 'formik';\nimport PropTypes from 'prop-types';\nimport { reg, resetErrors } from '../../redux/actions/auth';\nimport formSchema from './formSchema';\nimport ServerErrors from '../ServerErrors/ServerErrors';\n\nconst initialValues = {\n  username: '',\n  email: '',\n  password: '',\n};\n\nconst RegForm = (props) => {\n  const { isAuth, regFunc, resetErrorsFunc, isProcessing } = props;\n\n  const renderInput = (name, type, label, values, handleChange, handleBlur, errors, touched) => (\n    <label className=\"Form-Label\" htmlFor={name}>\n      {`${label}`}\n      <Input\n        className=\"Form-Field\"\n        type={type}\n        name={name}\n        placeholder={label}\n        id={name}\n        onChange={handleChange}\n        onBlur={handleBlur}\n        value={values[name]}\n        style={touched[name] && errors[name] ? { borderColor: 'red' } : {}} //\n      />\n      {touched[name] && errors[name] && <div className=\"Form-RequredField\">{errors[name]}</div>}\n    </label>\n  );\n\n  const renderForm = () => {\n    return (\n      <>\n        <h1>Signup Page</h1>\n        <div className=\"FormWrapper\">\n          <Formik\n            initialValues={initialValues}\n            validationSchema={formSchema}\n            onSubmit={(values, actions) => {\n              const { email, password, username } = values;\n              regFunc(email, password, username);\n              if (isAuth) {\n                actions.resetForm(initialValues);\n              }\n            }}\n          >\n            {({ values, handleChange, errors, touched, handleBlur, handleSubmit }) => (\n              <Form className=\"Form\" onSubmit={handleSubmit}>\n                {renderInput(\n                  'username',\n                  'text',\n                  'User Name',\n                  values,\n                  handleChange,\n                  handleBlur,\n                  errors,\n                  touched\n                )}\n                {renderInput(\n                  'email',\n                  'email',\n                  'Email',\n                  values,\n                  handleChange,\n                  handleBlur,\n                  errors,\n                  touched\n                )}\n                {renderInput(\n                  'password',\n                  'password',\n                  'Password',\n                  values,\n                  handleChange,\n                  handleBlur,\n                  errors,\n                  touched\n                )}\n                <Button\n                  loading={isProcessing}\n                  className=\"SubmitBtn Btn\"\n                  type=\"primary\"\n                  htmlType=\"submit\"\n                >\n                  Sign up\n                </Button>\n                <ServerErrors />\n              </Form>\n            )}\n          </Formik>\n          <NavLink to={`${process.env.PUBLIC_URL}/login`} onClick={resetErrorsFunc}>\n            Log in\n          </NavLink>\n        </div>\n      </>\n    );\n  };\n\n  return renderForm();\n};\n\nconst mapStateToProps = (state) => {\n  return {\n    isAuth: !!state.auth.token,\n    isProcessing: state.auth.isProcessing,\n  };\n};\n\nconst mapDispatchToProps = (dispatch) => ({\n  regFunc: (email, password, username) => dispatch(reg(email, password, username)),\n  resetErrorsFunc: () => dispatch(resetErrors()),\n});\n\nRegForm.propTypes = {\n  regFunc: PropTypes.func,\n  isProcessing: PropTypes.bool,\n  resetErrorsFunc: PropTypes.func,\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(RegForm);\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport { Input, Button } from 'antd';\nimport { NavLink } from 'react-router-dom';\nimport { Formik, Form } from 'formik';\nimport PropTypes from 'prop-types';\nimport { auth, resetErrors } from '../../redux/actions/auth';\n// import formSchema from './formSchema';\nimport ServerErrors from '../ServerErrors/ServerErrors';\n\nconst initialValues = { email: '', password: '' };\n\nconst AuthForm = (props) => {\n  const { isAuth, authFunc, resetErrorsFunc, isProcessing } = props;\n\n  const renderInput = (name, type, label, values, handleChange, handleBlur, errors, touched) => (\n    <label className=\"Form-Label\" htmlFor={name}>\n      {`${label}`}\n      <Input\n        className=\"Form-Field\"\n        type={type}\n        name={name}\n        placeholder={label}\n        id={name}\n        onChange={handleChange}\n        onBlur={handleBlur}\n        value={values[name]}\n        style={touched[name] && errors[name] ? { borderColor: 'red' } : {}} //\n      />\n      {touched[name] && errors[name] && <div className=\"Form-RequredField\">{errors[name]}</div>}\n    </label>\n  );\n\n  const renderForm = () => {\n    return (\n      <>\n        <h1>Login Page</h1>\n        <div className=\"FormWrapper\">\n          <Formik\n            initialValues={initialValues}\n            onSubmit={(values, actions) => {\n              const { email, password } = values;\n              authFunc(email, password);\n              if (isAuth) {\n                actions.resetForm(initialValues);\n              }\n            }}\n          >\n            {({ values, handleChange, errors, touched, handleBlur, handleSubmit }) => (\n              <Form className=\"Form\" onSubmit={handleSubmit}>\n                {renderInput(\n                  'email',\n                  'email',\n                  'Email',\n                  values,\n                  handleChange,\n                  handleBlur,\n                  errors,\n                  touched\n                )}\n                {renderInput(\n                  'password',\n                  'password',\n                  'Password',\n                  values,\n                  handleChange,\n                  handleBlur,\n                  errors,\n                  touched\n                )}\n                <Button\n                  loading={isProcessing}\n                  className=\"SubmitBtn Btn\"\n                  type=\"primary\"\n                  htmlType=\"submit\"\n                >\n                  Log in\n                </Button>\n                <ServerErrors />\n              </Form>\n            )}\n          </Formik>\n          <NavLink to={`${process.env.PUBLIC_URL}/signup`} onClick={resetErrorsFunc}>\n            Signup\n          </NavLink>\n        </div>\n      </>\n    );\n  };\n\n  return renderForm();\n};\n\nconst mapStateToProps = (state) => {\n  return {\n    isAuth: !!state.auth.token,\n    isProcessing: state.auth.isProcessing,\n  };\n};\n\nconst mapDispatchToProps = (dispatch) => ({\n  authFunc: (email, password) => dispatch(auth(email, password)),\n  resetErrorsFunc: () => dispatch(resetErrors()),\n});\n\nAuthForm.propTypes = {\n  authFunc: PropTypes.func,\n  isProcessing: PropTypes.bool,\n  resetErrorsFunc: PropTypes.func,\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(AuthForm);\n","import React from 'react';\nimport { connect } from 'react-redux';\n\nimport { Button } from 'antd';\nimport PropTypes from 'prop-types';\nimport { logOut } from '../../redux/actions/auth';\nimport './UserBio.scss';\n\nconst UserBio = (props) => {\n  const { username, logOutFunc } = props;\n\n  const logOutHandler = () => {\n    logOutFunc();\n    localStorage.removeItem('token');\n    localStorage.removeItem('userId');\n  };\n\n  const renderUserBio = () => {\n    return (\n      <div className=\"UserBioWrap\">\n        <div className=\"UserBio\">{username}</div>\n        <Button className=\"Btn\" type=\"primary\" onClick={logOutHandler}>\n          Log out\n        </Button>\n      </div>\n    );\n  };\n\n  return renderUserBio();\n};\n\nconst mapStateToProps = (state) => {\n  return {\n    username: state.auth.username,\n  };\n};\n\nconst mapDispatchToProps = (dispatch) => {\n  return { logOutFunc: () => dispatch(logOut()) };\n};\n\nUserBio.propTypes = {\n  username: PropTypes.string.isRequired,\n  logOutFunc: PropTypes.func.isRequired,\n};\nexport default connect(mapStateToProps, mapDispatchToProps)(UserBio);\n","import axios from 'axios';\nimport rootApiUrl from './rootApiUrl';\n\nconst createArticleUrl = `${rootApiUrl}/articles`;\n\n// axios.defaults.headers.common.Authorization = `Token ${token}`;\n\nconst createArticleFetch = async (data) => {\n  const token = localStorage.getItem('token');\n  const headers = { Authorization: `Token ${token}` };\n  const response = await axios.post(\n    createArticleUrl,\n    {\n      article: data,\n    },\n    { headers }\n  );\n  return response;\n};\n\nexport default createArticleFetch;\n","import createArticleFetch from '../../api/createArticle';\nimport {\n  CREATE_ARTICLE_REQUEST,\n  CREATE_ARTICLE_FAILURE,\n  CREATE_ARTICLE_SUCCESS,\n} from './actionTypes';\n\nexport const createArticleRequest = () => {\n  return {\n    type: CREATE_ARTICLE_REQUEST,\n  };\n};\n\nexport const createArticleSuccess = (payload) => {\n  return {\n    type: CREATE_ARTICLE_SUCCESS,\n    payload,\n  };\n};\n\nexport const createArticleFailure = (payload) => {\n  return { type: CREATE_ARTICLE_FAILURE, payload };\n};\n\nexport const createArticle = (data) => {\n  return async (dispatch) => {\n    dispatch(createArticleRequest());\n    try {\n      await createArticleFetch(data);\n      dispatch(createArticleSuccess());\n    } catch (err) {\n      dispatch(createArticleFailure(err.response.data.errors));\n    }\n  };\n};\n","import * as Yup from 'yup';\n\nconst createArticleSchema = Yup.object().shape({\n  title: Yup.string().required('Required'),\n  description: Yup.string().required('Required'),\n  content: Yup.string().required('Required'),\n  tags: Yup.string(),\n});\nexport default createArticleSchema;\n","import React, { useState } from 'react';\nimport { connect } from 'react-redux';\nimport './CreateArticle.scss';\nimport { Formik, Form } from 'formik';\nimport { Input, Button } from 'antd';\nimport PropTypes from 'prop-types';\nimport { createArticle } from '../../redux/actions/createArticle';\nimport createArticleSchema from './createArticleSchema';\n\nconst { TextArea } = Input;\n\nconst initialValues = { title: '', description: '', content: '', tags: '' };\n\nconst CreateArticle = (props) => {\n  const { createArticleFunc, isProcessing } = props;\n  const [response, setResponse] = useState('');\n  const renderInput = (\n    name,\n    type,\n    label,\n    values,\n    handleChange,\n    handleBlur,\n    errors,\n    touched,\n    Component\n  ) => (\n    <label className=\"CreateArticle-Label\" htmlFor={name}>\n      {`${label}`}\n      <Component\n        className=\"CreateArticle-Field\"\n        type={type}\n        name={name}\n        placeholder={label}\n        id={name}\n        onChange={handleChange}\n        onBlur={handleBlur}\n        value={values[name]}\n        style={touched[name] && errors[name] ? { borderColor: 'red' } : {}} //\n      />\n      {touched[name] && errors[name] && (\n        <div className=\"CreateArticle-RequiredField\">{errors[name]}</div>\n      )}\n    </label>\n  );\n\n  const renderForm = () => {\n    return (\n      <div className=\"CreateArticle\">\n        <h1>New article</h1>\n        <div className=\"CreateArticle-FormWrapper\">\n          <Formik\n            initialValues={initialValues}\n            validationSchema={createArticleSchema}\n            onSubmit={(values, actions) => {\n              const { title, description, content, tags } = values;\n              const tagList = tags === '' ? [] : tags.split(',');\n              try {\n                createArticleFunc({\n                  title,\n                  description,\n                  body: content,\n                  tagList,\n                });\n                setResponse(() => 'Article was created succssesfully !');\n              } catch (err) {\n                setResponse(() => `Ooops somthing going wrong ${err}`);\n              }\n\n              actions.resetForm();\n            }}\n          >\n            {({ values, handleChange, errors, touched, handleBlur, handleSubmit }) => (\n              <Form className=\"CreateArticle-Form\" onSubmit={handleSubmit}>\n                {renderInput(\n                  'title',\n                  'text',\n                  'Title',\n                  values,\n                  handleChange,\n                  handleBlur,\n                  errors,\n                  touched,\n                  Input\n                )}\n                {renderInput(\n                  'description',\n                  'text',\n                  'Description',\n                  values,\n                  handleChange,\n                  handleBlur,\n                  errors,\n                  touched,\n                  Input\n                )}\n                {renderInput(\n                  'content',\n                  'text',\n                  'Article content',\n                  values,\n                  handleChange,\n                  handleBlur,\n                  errors,\n                  touched,\n                  TextArea\n                )}\n                {renderInput(\n                  'tags',\n                  'text',\n                  'Tags',\n                  values,\n                  handleChange,\n                  handleBlur,\n                  errors,\n                  touched,\n                  Input\n                )}\n                <Button\n                  loading={isProcessing}\n                  className=\"SubmitBtn Btn\"\n                  type=\"primary\"\n                  htmlType=\"submit\"\n                >\n                  create article\n                </Button>\n              </Form>\n            )}\n          </Formik>\n          <div className=\"CreateArticle-Response\">{response}</div>\n        </div>\n      </div>\n    );\n  };\n\n  return renderForm();\n};\n\nconst mapStateToProps = (state) => {\n  return {\n    isProcessing: state.createArticle.isProcessing,\n  };\n};\n\nconst mapDispatchToProps = (dispatch) => ({\n  createArticleFunc: (data) => dispatch(createArticle(data)),\n});\n\nCreateArticle.propTypes = {\n  createAricleFunc: PropTypes.func,\n  isProcessing: PropTypes.bool,\n  response: PropTypes.string,\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(CreateArticle);\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst Layout = (props) => {\n  const { children } = props;\n  return <main>{children}</main>;\n};\n\nexport default Layout;\n\nLayout.propTypes = {\n  children: PropTypes.element.isRequired,\n};\n","import axios from 'axios';\nimport rootApiUrl from './rootApiUrl';\n\nconst getArticlesFetch = async (offset) => {\n  const token = localStorage.getItem('token');\n  const headers = { Authorization: `Token ${token}` };\n  const getArticlesListUrl = `${rootApiUrl}/articles?limit=10&offset=${offset}`;\n  if (!token) {\n    const response = await axios.get(getArticlesListUrl);\n    return response;\n  }\n  const response = await axios.get(getArticlesListUrl, { headers });\n  return response;\n};\n\nexport default getArticlesFetch;\n","import axios from 'axios';\nimport rootApiUrl from './rootApiUrl';\n\nexport const favoriteArticleFetch = async (slug) => {\n  const token = localStorage.getItem('token');\n  const headers = { Authorization: `Token ${token}` };\n  const favoriteArticleUrl = `${rootApiUrl}/articles/${slug}/favorite`;\n  const response = await axios.post(favoriteArticleUrl, null, { headers });\n  return response;\n};\n\nexport const unfavoriteArticleFetch = async (slug) => {\n  const token = localStorage.getItem('token');\n  const headers = { Authorization: `Token ${token}` };\n  const favoriteArticleUrl = `${rootApiUrl}/articles/${slug}/favorite`;\n  const response = await axios.delete(favoriteArticleUrl, { headers });\n  return response;\n};\n","import getArticlesFetch from '../../api/getArticlesList';\nimport { favoriteArticleFetch, unfavoriteArticleFetch } from '../../api/favoriteUnfavoriteArticle';\nimport {\n  GET_ARTICLES_REQUEST,\n  GET_ARTICLES_SUCCESS,\n  GET_ARTICLES_FAILURE,\n  ARTICLE_FAVORITED,\n  ARTICLE_UNFAVORITED,\n  ARTICLES_PAGINATION,\n} from './actionTypes';\n\nexport const getArticlesRequest = () => {\n  return {\n    type: GET_ARTICLES_REQUEST,\n  };\n};\n\nexport const getArticlesSuccess = (payload) => {\n  return {\n    type: GET_ARTICLES_SUCCESS,\n    payload,\n  };\n};\n\nexport const getArticlesFailure = (payload) => {\n  return { type: GET_ARTICLES_FAILURE, payload };\n};\n\nexport const getArticles = (offset) => {\n  return async (dispatch) => {\n    dispatch(getArticlesRequest());\n    try {\n      const response = await getArticlesFetch(offset);\n      dispatch(getArticlesSuccess(response.data));\n    } catch (err) {\n      dispatch(getArticlesFailure(err));\n    }\n  };\n};\n\nexport const articleFavorited = (payload) => {\n  return { type: ARTICLE_FAVORITED, payload };\n};\n\nexport const articleUnfavorited = (payload) => {\n  return { type: ARTICLE_UNFAVORITED, payload };\n};\n\nexport const favoriteArticle = (slug) => {\n  return async (dispatch) => {\n    try {\n      const response = await favoriteArticleFetch(slug);\n      dispatch(articleFavorited(response.data));\n    } catch (err) {\n      dispatch(getArticlesFailure(err));\n    }\n  };\n};\n\nexport const unfavoriteArticle = (slug) => {\n  return async (dispatch) => {\n    try {\n      const response = await unfavoriteArticleFetch(slug);\n      dispatch(articleFavorited(response.data));\n    } catch (err) {\n      dispatch(getArticlesFailure(err));\n    }\n  };\n};\n\nexport const articlesPagination = (payload) => {\n  return { type: ARTICLES_PAGINATION, payload };\n};\n","import axios from 'axios';\nimport rootApiUrl from './rootApiUrl';\n\nconst getArticleFetch = async (slug) => {\n  const token = localStorage.getItem('token');\n  const headers = { Authorization: `Token ${token}` };\n  const getArticleListUrl = `${rootApiUrl}/articles/${slug}`;\n  if (!token) {\n    const response = await axios.get(getArticleListUrl);\n    return response;\n  }\n  const response = await axios.get(getArticleListUrl, { headers });\n  return response;\n};\n\nexport default getArticleFetch;\n","import axios from 'axios';\nimport rootApiUrl from './rootApiUrl';\n\n// axios.defaults.headers.common.Authorization = `Token ${token}`;\n\nconst deleteArticleFetch = async (slug) => {\n  const deleteArticleUrl = `${rootApiUrl}/articles/${slug}`;\n  const token = localStorage.getItem('token');\n  const headers = { Authorization: `Token ${token}` };\n  const response = await axios.delete(\n    deleteArticleUrl,\n\n    { headers }\n  );\n  return response;\n};\n\nexport default deleteArticleFetch;\n","import React, { useState, useEffect } from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport { withRouter, useHistory } from 'react-router-dom';\nimport './Article.scss';\nimport { LikeTwoTone } from '@ant-design/icons';\nimport { Button } from 'antd';\nimport { favoriteArticle, unfavoriteArticle } from '../../redux/actions/getArticles';\nimport getArticleFetch from '../../api/getArticle';\n\nimport { deleteArticle } from '../../redux/actions/deleteArticle';\n\nconst Article = (props) => {\n  const {\n    match: {\n      params: { slug },\n    },\n    favoriteArticleFunc,\n    unfavoriteArticleFunc,\n    username,\n    deleteProcessing,\n    deleteArticleFunc,\n  } = props;\n\n  const [article, setArticle] = useState(null);\n  const history = useHistory();\n\n  useEffect(() => {\n    getArticleFetch(slug)\n      .then((response) => response.data)\n      .then((data) => data.article)\n      .then((updatedArticle) => setArticle(() => updatedArticle));\n  }, [slug]);\n\n  if (article === null) {\n    return <div>Article is loading...</div>;\n  }\n\n  const { favorited, favoritesCount } = article;\n\n  const updateBtnHandler = () => {\n    history.push(`${process.env.PUBLIC_URL}/articles/${slug}/edit`);\n  };\n\n  const deleteBtnHandler = () => {\n    deleteArticleFunc(slug).then((answer) => {\n      if (answer.status === 200) {\n        history.push(`${process.env.PUBLIC_URL}/`);\n      }\n      // else {\n      //   console.log(answer);\n      // }\n    });\n  };\n\n  const handleLikeArticle = (evt) => {\n    evt.preventDefault();\n    evt.stopPropagation();\n    if (favorited) {\n      unfavoriteArticleFunc(slug);\n      setArticle(() => ({\n        ...article,\n        favorited: !favorited,\n        favoritesCount: favoritesCount - 1,\n      }));\n    } else {\n      favoriteArticleFunc(slug);\n      setArticle(() => ({\n        ...article,\n        favorited: !favorited,\n        favoritesCount: favoritesCount + 1,\n      }));\n    }\n  };\n\n  let likeBtnState = 'LikeButton';\n\n  if (favorited) {\n    likeBtnState = 'LikeButton LikeButton__Liked';\n  }\n\n  return (\n    <div className=\"Article\">\n      <div className=\"Article-Meta\">\n        <div className=\"Meta-Date\">{new Date(article.createdAt).toDateString()}</div>\n        <div className=\"Meta-Author\">{article.author.username}</div>\n      </div>\n      <h1 className=\"Article-Header\">{article.title}</h1>\n      <div className=\"Article-Description\">{article.description}</div>\n      <div className=\"Article-Body\">{article.body}</div>\n      <ul className=\"Article-TagsList\">\n        {article.tagList.map((tag) => (\n          <li key={tag} className=\"TagList-Item\">\n            {tag}\n          </li>\n        ))}\n      </ul>\n      <div className=\"Likes\">\n        <button className={likeBtnState} type=\"button\" onClick={handleLikeArticle}>\n          <LikeTwoTone />\n          {favoritesCount}\n        </button>\n      </div>\n      {article.author.username === username ? (\n        <div className=\"Article-Buttons\">\n          <Button className=\"Buttons-UpdateBtn\" onClick={updateBtnHandler}>\n            Update article\n          </Button>\n          <Button\n            danger\n            loading={deleteProcessing}\n            className=\"Buttons-UpdateBtn\"\n            onClick={deleteBtnHandler}\n          >\n            Delete article\n          </Button>\n          <div className=\"Article-DeliteError\" />\n        </div>\n      ) : null}\n    </div>\n  );\n};\n\nconst mapStateToProps = (state) => {\n  return {\n    username: state.auth.username,\n    deleteProcessing: state.deleteArticle.isProcessing,\n  };\n};\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    favoriteArticleFunc: (slug) => dispatch(favoriteArticle(slug)),\n    unfavoriteArticleFunc: (slug) => dispatch(unfavoriteArticle(slug)),\n    deleteArticleFunc: (slug) => dispatch(deleteArticle(slug)),\n  };\n};\n\nArticle.propTypes = {\n  username: PropTypes.string.isRequired,\n  deleteProcessing: PropTypes.bool.isRequired,\n  deleteArticleFunc: PropTypes.func.isRequired,\n  match: PropTypes.shape({\n    params: PropTypes.shape({\n      slug: PropTypes.string.isRequired,\n    }),\n  }).isRequired,\n  favoriteArticleFunc: PropTypes.func.isRequired,\n  unfavoriteArticleFunc: PropTypes.func.isRequired,\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(withRouter(Article));\n","import deleteAticleFetch from '../../api/deleteArticle';\nimport {\n  DELETE_ARTICLE_REQUEST,\n  DELETE_ARTICLE_SUCCESS,\n  DELETE_ARTICLE_FAILURE,\n} from './actionTypes';\n\nexport const deleteArticleRequest = () => {\n  return {\n    type: DELETE_ARTICLE_REQUEST,\n  };\n};\n\nexport const deleteArticleSuccess = () => {\n  return {\n    type: DELETE_ARTICLE_SUCCESS,\n  };\n};\n\nexport const deleteArticleFailure = (payload) => {\n  return { type: DELETE_ARTICLE_FAILURE, payload };\n};\n\nexport const deleteArticle = (slug) => {\n  return async (dispatch) => {\n    dispatch(deleteArticleRequest());\n    try {\n      const response = await deleteAticleFetch(slug);\n      dispatch(deleteArticleSuccess());\n      return response;\n    } catch (err) {\n      dispatch(deleteArticleFailure(err.response.data.errors));\n      return err;\n    }\n  };\n};\n","import React from 'react';\nimport './ArticlePreview.scss';\nimport { LikeTwoTone } from '@ant-design/icons';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport { useHistory } from 'react-router-dom';\nimport { favoriteArticle, unfavoriteArticle } from '../../redux/actions/getArticles';\n\nconst ArticlePreview = (props) => {\n  const {\n    article: {\n      slug,\n      title,\n      description,\n      tagList,\n      favorited,\n      favoritesCount,\n      createdAt,\n      author: { username },\n    },\n    favoriteArticleFunc,\n    unfavoriteArticleFunc,\n  } = props;\n\n  const history = useHistory();\n\n  const toArticlePage = (evt) => {\n    evt.preventDefault();\n    history.push(`${process.env.PUBLIC_URL}/articles/${slug}`);\n  };\n\n  const handleLikeArticle = (evt) => {\n    evt.preventDefault();\n    evt.stopPropagation();\n    if (favorited) {\n      unfavoriteArticleFunc(slug);\n    } else {\n      favoriteArticleFunc(slug);\n    }\n  };\n\n  let likeBtnState = 'LikeButton';\n\n  if (favorited) {\n    likeBtnState = 'LikeButton LikeButton__Liked';\n  }\n  // const { username } = props.article.author;\n  return (\n    <div\n      className=\"ArticlePreview\"\n      onClick={toArticlePage}\n      onKeyDown={toArticlePage}\n      role=\"button\"\n      tabIndex=\"0\"\n    >\n      <div className=\"ArticlePreview-AuthorDateLikesRow\">\n        <div className=\"AuthorDate\">\n          <span className=\"Author\">{username}</span>\n          <span className=\"Date\">{new Date(createdAt).toDateString()}</span>\n        </div>\n        <div className=\"Likes\">\n          <button className={likeBtnState} type=\"button\" onClick={handleLikeArticle}>\n            <LikeTwoTone />\n            {favoritesCount}\n          </button>\n        </div>\n      </div>\n      <div className=\"ArticlePreview-HeaderDescriptionRow\">\n        <h1>{title}</h1>\n        <span>{description}</span>\n      </div>\n      <div className=\"ArticlePreview-TagsRow\">\n        <ul className=\"TagList\">\n          {tagList.map((tag) => (\n            <li className=\"TagList-Item\" key={tag}>\n              {tag}\n            </li>\n          ))}\n        </ul>\n      </div>\n    </div>\n  );\n};\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    favoriteArticleFunc: (slug) => dispatch(favoriteArticle(slug)),\n    unfavoriteArticleFunc: (slug) => dispatch(unfavoriteArticle(slug)),\n  };\n};\n\nArticlePreview.propTypes = {\n  article: PropTypes.shape({\n    slug: PropTypes.string.isRequired,\n    title: PropTypes.string.isRequired,\n    description: PropTypes.string.isRequired,\n    tagList: PropTypes.array.isRequired,\n    favorited: PropTypes.bool.isRequired,\n    favoritesCount: PropTypes.number.isRequired,\n    createdAt: PropTypes.string.isRequired,\n    author: PropTypes.shape({ username: PropTypes.string.isRequired }).isRequired,\n  }).isRequired,\n  favoriteArticleFunc: PropTypes.func.isRequired,\n  unfavoriteArticleFunc: PropTypes.func.isRequired,\n};\n\nexport default connect(null, mapDispatchToProps)(ArticlePreview);\n","import React from 'react';\nimport { Pagination } from 'antd';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport { articlesPagination } from '../../redux/actions/getArticles';\n\nconst MyPagination = (props) => {\n  const { articlesCount, currentPage, switchPage } = props;\n\n  const changePageHandler = (page) => {\n    switchPage({ currentPage: page });\n  };\n\n  return (\n    <Pagination\n      showSizeChanger={false}\n      current={currentPage}\n      total={articlesCount}\n      onChange={changePageHandler}\n    />\n  );\n};\n\nconst mapStateToProps = (state) => {\n  return {\n    articlesCount: state.getArticles.articlesCount,\n    currentPage: state.getArticles.currentPage,\n  };\n};\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    switchPage: (currentPage) => dispatch(articlesPagination(currentPage)),\n  };\n};\n\nMyPagination.propTypes = {\n  articlesCount: PropTypes.number.isRequired,\n  currentPage: PropTypes.number.isRequired,\n  switchPage: PropTypes.func.isRequired,\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(MyPagination);\n","import React, { useEffect } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport PropTypes from 'prop-types';\r\nimport ArticlePreview from '../ArticlePreview/ArticlePreview';\r\nimport { getArticles } from '../../redux/actions/getArticles';\r\nimport ArticlesPagination from '../ArticlesPagination/ArticlesPagination';\r\nimport './ArticleList.scss';\r\n\r\nconst ArticleList = (props) => {\r\n  const { articles, isLoading, errors, getArticlesFunc, offset } = props;\r\n\r\n  useEffect(() => {\r\n    getArticlesFunc(offset);\r\n  }, [getArticlesFunc, offset]);\r\n\r\n  if (isLoading) {\r\n    return <div>Articles is loading...</div>;\r\n  }\r\n\r\n  if (errors) {\r\n    return <div>Something went wrong {errors}</div>;\r\n  }\r\n\r\n  return (\r\n    <div className=\"ArticleList\">\r\n      {articles.map((article) => (\r\n        <ArticlePreview key={article.slug} article={article} />\r\n      ))}\r\n      <ArticlesPagination />\r\n    </div>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    articles: state.getArticles.articles,\r\n    isLoading: state.getArticles.isLoading,\r\n    errors: state.getArticles.errors,\r\n    offset:\r\n      state.getArticles.currentPage === 1\r\n        ? 0\r\n        : Math.floor((state.getArticles.currentPage - 1) * 10),\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return { getArticlesFunc: (offset) => dispatch(getArticles(offset)) };\r\n};\r\n\r\nArticleList.propTypes = {\r\n  articles: PropTypes.arrayOf(PropTypes.object).isRequired,\r\n  isLoading: PropTypes.bool.isRequired,\r\n  errors: PropTypes.oneOfType([PropTypes.string, PropTypes.object]).isRequired,\r\n  getArticlesFunc: PropTypes.func.isRequired,\r\n  offset: PropTypes.number.isRequired,\r\n  // articles: PropTypes.shape({ map: PropTypes.func.isRequired }).isRequired,\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ArticleList);\r\n","import React from 'react';\r\nimport { NavLink } from 'react-router-dom';\r\nimport PropTypes from 'prop-types';\r\nimport './Navigation.scss';\r\n\r\nconst Navigation = (props) => {\r\n  const { isLogIn } = props;\r\n\r\n  let links = (\r\n    <nav className=\"Navigation\">\r\n      <NavLink exact className=\"Navigation-Link\" to={`${process.env.PUBLIC_URL}/`}>\r\n        Home page\r\n      </NavLink>\r\n      <NavLink className=\"Navigation-Link\" to={`${process.env.PUBLIC_URL}/login`}>\r\n        Log in\r\n      </NavLink>\r\n      <NavLink className=\"Navigation-Link\" to={`${process.env.PUBLIC_URL}/signup`}>\r\n        Signup\r\n      </NavLink>\r\n    </nav>\r\n  );\r\n\r\n  if (isLogIn) {\r\n    links = (\r\n      <nav className=\"Navigation\">\r\n        <NavLink className=\"Navigation-Link\" to={`${process.env.PUBLIC_URL}/`} exact>\r\n          Home page\r\n        </NavLink>\r\n        <NavLink className=\"Navigation-Link\" to={`${process.env.PUBLIC_URL}/add`}>\r\n          Create article\r\n        </NavLink>\r\n      </nav>\r\n    );\r\n  }\r\n\r\n  return links;\r\n};\r\n\r\n// const mapStateToProps = (state) => {\r\n//   return {\r\n//     isLogIn: state.auth.isLogIn,\r\n//   };\r\n// };\r\n\r\nNavigation.propTypes = {\r\n  isLogIn: PropTypes.bool.isRequired,\r\n};\r\n\r\nexport default Navigation;\r\n","import * as Yup from 'yup';\n\nconst updateArticleSchema = Yup.object().shape({\n  title: Yup.string().required('Required'),\n  description: Yup.string().required('Required'),\n  content: Yup.string().required('Required'),\n  tags: Yup.string(),\n});\nexport default updateArticleSchema;\n","import axios from 'axios';\nimport rootApiUrl from './rootApiUrl';\n\n// axios.defaults.headers.common.Authorization = `Token ${token}`;\n\nconst updateArticleFetch = async (data, slug) => {\n  const updateArticleUrl = `${rootApiUrl}/articles/${slug}`;\n  const token = localStorage.getItem('token');\n  const headers = { Authorization: `Token ${token}` };\n  const response = await axios.put(\n    updateArticleUrl,\n    {\n      article: data,\n    },\n    { headers }\n  );\n  return response;\n};\n\nexport default updateArticleFetch;\n","import React, { useState, useEffect } from 'react';\nimport './ArticleEditor.scss';\nimport { connect } from 'react-redux';\nimport { withRouter, useHistory } from 'react-router-dom';\nimport { Formik, Form } from 'formik';\nimport { Input, Button } from 'antd';\nimport PropTypes from 'prop-types';\nimport updateArticleSchema from './updateArticleSchema';\nimport getArticleFetch from '../../api/getArticle';\nimport { updateArticle } from '../../redux/actions/updateArticle';\n\nconst { TextArea } = Input;\n\nconst ArticleEditor = (props) => {\n  const {\n    match: {\n      params: { slug },\n    },\n    updateArticleFunc,\n    isProcessing,\n  } = props;\n\n  const [article, setArticle] = useState(null);\n  const [response, setResponse] = useState('');\n  const history = useHistory();\n\n  useEffect(() => {\n    getArticleFetch(slug)\n      .then((answer) => answer.data)\n      .then((data) => data.article)\n      .then((updatedArticle) => setArticle(() => updatedArticle));\n  }, [slug]);\n\n  if (article === null) {\n    return <div>Article is loading...</div>;\n  }\n\n  const renderInput = (\n    name,\n    type,\n    label,\n    values,\n    handleChange,\n    handleBlur,\n    errors,\n    touched,\n    Component\n  ) => (\n    <label className=\"ArticleEditor-Label\" htmlFor={name}>\n      {`${label}`}\n      <Component\n        className=\"ArticleEditor-Field\"\n        type={type}\n        name={name}\n        placeholder={label}\n        id={name}\n        onChange={handleChange}\n        onBlur={handleBlur}\n        value={values[name]}\n        style={touched[name] && errors[name] ? { borderColor: 'red' } : {}} //\n      />\n      {touched[name] && errors[name] && (\n        <div className=\"ArticleEditor-RequiredField\">{errors[name]}</div>\n      )}\n    </label>\n  );\n\n  const initialValues = {\n    title: article.title,\n    description: article.description,\n    content: article.body,\n    tags: article.tagList.length > 0 ? article.tagList.join(', ') : '',\n  };\n\n  const renderForm = () => {\n    return (\n      <div className=\"ArticleEditor\">\n        <h1>Update article</h1>\n        <div className=\"ArticleEditor-FormWrapper\">\n          <Formik\n            initialValues={initialValues}\n            validationSchema={updateArticleSchema}\n            onSubmit={(values) => {\n              const { title, description, content, tags } = values;\n              const tagList = tags === '' ? [] : tags.split(',');\n              try {\n                updateArticleFunc(\n                  { title, description, body: content, tagList },\n                  article.slug\n                ).then((updatedArticle) => {\n                  history.push(`${process.env.PUBLIC_URL}/articles/${updatedArticle.slug}`);\n                });\n              } catch (err) {\n                setResponse(() => `Somthing going wrong: ${err}`);\n              }\n            }}\n          >\n            {({ values, handleChange, errors, touched, handleBlur, handleSubmit }) => (\n              <Form className=\"ArticleEditor-Form\" onSubmit={handleSubmit}>\n                {renderInput(\n                  'title',\n                  'text',\n                  'Title',\n                  values,\n                  handleChange,\n                  handleBlur,\n                  errors,\n                  touched,\n                  Input\n                )}\n                {renderInput(\n                  'description',\n                  'text',\n                  'Description',\n                  values,\n                  handleChange,\n                  handleBlur,\n                  errors,\n                  touched,\n                  Input\n                )}\n                {renderInput(\n                  'content',\n                  'text',\n                  'Article content',\n                  values,\n                  handleChange,\n                  handleBlur,\n                  errors,\n                  touched,\n                  TextArea\n                )}\n                {renderInput(\n                  'tags',\n                  'text',\n                  'Tags',\n                  values,\n                  handleChange,\n                  handleBlur,\n                  errors,\n                  touched,\n                  Input\n                )}\n                <Button\n                  loading={isProcessing}\n                  className=\"SubmitBtn Btn\"\n                  type=\"primary\"\n                  htmlType=\"submit\"\n                >\n                  Update article\n                </Button>\n              </Form>\n            )}\n          </Formik>\n          <div className=\"ArticleEditor-Response\">{response}</div>\n        </div>\n      </div>\n    );\n  };\n\n  return renderForm();\n};\n\nconst mapStateToProps = (state) => {\n  return {\n    isProcessing: state.updateArticle.isProcessing,\n  };\n};\n\nconst mapDispatchToProps = (dispatch) => ({\n  updateArticleFunc: (data, slug) => dispatch(updateArticle(data, slug)),\n});\n\nArticleEditor.propTypes = {\n  updateAricleFunc: PropTypes.func,\n  isProcessing: PropTypes.bool,\n  response: PropTypes.string,\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(withRouter(ArticleEditor));\n","import updateAticleFetch from '../../api/updateArticle';\nimport {\n  UPDATE_ARTICLE_REQUEST,\n  UPDATE_ARTICLE_SUCCESS,\n  UPDATE_ARTICLE_FAILURE,\n} from './actionTypes';\n\nexport const updateArticleRequest = () => {\n  return {\n    type: UPDATE_ARTICLE_REQUEST,\n  };\n};\n\nexport const updateArticleSuccess = () => {\n  return {\n    type: UPDATE_ARTICLE_SUCCESS,\n  };\n};\n\nexport const updateArticleFailure = (payload) => {\n  return { type: UPDATE_ARTICLE_FAILURE, payload };\n};\n\nexport const updateArticle = (data, slug) => {\n  return async (dispatch) => {\n    dispatch(updateArticleRequest());\n    try {\n      const response = await updateAticleFetch(data, slug);\n      dispatch(updateArticleSuccess());\n      return response.data.article;\n    } catch (err) {\n      dispatch(updateArticleFailure(err.response.data.errors));\n      return err;\n    }\n  };\n};\n","import './App.scss';\r\nimport React, { useEffect } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { Route, Switch, Redirect } from 'react-router-dom';\r\nimport PropTypes from 'prop-types';\r\nimport RegForm from './components/RegForm/RegForm';\r\nimport AuthForm from './components/AuthForm/AuthForm';\r\nimport UserBio from './components/UserBio/UserBio';\r\nimport CreateArticle from './components/CreateArticle/CreateArticle';\r\nimport { autoLogIn } from './redux/actions/auth';\r\nimport Layout from './hoc/Layout/Layout';\r\nimport Article from './components/Article/Article';\r\nimport ArticleList from './components/ArticleList/ArticleList';\r\nimport Navigation from './components/Navigation/Navigation';\r\nimport ArticleEditor from './components/ArticleEditor/ArticleEditor';\r\n\r\nfunction App(props) {\r\n  const { isAuth, autoLogInFunc } = props;\r\n\r\n  useEffect(() => {\r\n    autoLogInFunc();\r\n  });\r\n\r\n  let routes = (\r\n    <div className=\"App\">\r\n      <Navigation isLogIn={false} />\r\n      <Switch>\r\n        <Route exact path={`${process.env.PUBLIC_URL}/`} component={ArticleList} />\r\n        <Route path={`${process.env.PUBLIC_URL}/articles/:slug`} component={Article} />\r\n        <Route exact path={`${process.env.PUBLIC_URL}/signup`} component={RegForm} />\r\n        <Route exact path={`${process.env.PUBLIC_URL}/login`} component={AuthForm} />\r\n        <Route exact path={`${process.env.PUBLIC_URL}/add`} component={CreateArticle} />\r\n        <Redirect to={`${process.env.PUBLIC_URL}/`} />\r\n      </Switch>\r\n    </div>\r\n  );\r\n\r\n  if (isAuth) {\r\n    routes = (\r\n      <div className=\"App\">\r\n        <Navigation isLogIn />\r\n        <UserBio />\r\n        <Switch>\r\n          <Route exact path={`${process.env.PUBLIC_URL}/`} component={ArticleList} />\r\n          <Route exact path={`${process.env.PUBLIC_URL}/articles/:slug`} component={Article} />\r\n          <Route\r\n            exact\r\n            path={`${process.env.PUBLIC_URL}/articles/:slug/edit`}\r\n            component={ArticleEditor}\r\n          />\r\n          <Route exact path={`${process.env.PUBLIC_URL}/add`} component={CreateArticle} />\r\n          <Redirect to={`${process.env.PUBLIC_URL}/`} />\r\n        </Switch>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  return <Layout>{routes}</Layout>;\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    isAuth: !!state.auth.token,\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n  autoLogInFunc: () => dispatch(autoLogIn()),\r\n});\r\n\r\nApp.propTypes = {\r\n  isAuth: PropTypes.bool.isRequired,\r\n  autoLogInFunc: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(App);\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'antd/dist/antd.css';\nimport './index.scss';\nimport { createStore, applyMiddleware, compose } from 'redux';\nimport { Provider } from 'react-redux';\nimport thunk from 'redux-thunk';\nimport { BrowserRouter } from 'react-router-dom';\nimport rootReducer from './redux/redusers/rootReduser';\nimport * as serviceWorker from './serviceWorker';\nimport App from './App';\n\nconst composeEnhancers =\n  typeof window === 'object' && window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__\n    ? window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__({\n        // Specify extension’s options like name, actionsBlacklist, actionsCreators, serialize...\n      })\n    : compose;\n\nconst store = createStore(rootReducer, composeEnhancers(applyMiddleware(thunk)));\n\nconst app = (\n  <BrowserRouter>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </BrowserRouter>\n);\n\nReactDOM.render(app, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}