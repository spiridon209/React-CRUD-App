{"version":3,"sources":["redux/redusers/auth.js","redux/actions/actionTypes.js","redux/redusers/rootReduser.js","serviceWorker.js","redux/actions/auth.js","components/RegForm/formSchema.js","components/ServerErrors/ServerErrors.jsx","components/RegForm/RegForm.jsx","components/AuthForm/formSchema.js","components/AuthForm/AuthForm.jsx","components/UserBio/UserBio.jsx","App.jsx","index.jsx"],"names":["initialState","token","username","email","isLogIn","id","errors","isProcessing","authReduser","state","action","type","payload","combineReducers","auth","authReducer","Boolean","window","location","hostname","match","authSuccess","authFailure","mail","password","name","dispatch","a","authData","apiUrl","axios","post","user","response","data","localStorage","setItem","formSchema","Yup","shape","max","required","min","matches","connect","serverErrors","props","errorsList","className","Object","keys","map","error","index","key","_","uniqueId","WarningTwoTone","twoToneColor","initialValues","isAuth","authFunc","logOutFunc","renderInput","label","values","handleChange","handleBlur","touched","htmlFor","placeholder","onChange","onBlur","value","style","borderColor","to","process","validationSchema","onSubmit","actions","resetForm","handleSubmit","loading","htmlType","onClick","logOutHandler","removeItem","path","component","RegForm","AuthForm","UserBio","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","rootReducer","applyMiddleware","thunk","app","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","console","message"],"mappings":"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","file":"static/js/main.a704f782.chunk.js","sourcesContent":["import { AUTH_REQUEST, AUTH_FAILURE, AUTH_SUCCESS, LOG_OUT } from '../actions/actionTypes';\n\nconst initialState = {\n  token: null,\n  username: '',\n  email: '',\n  isLogIn: true,\n  id: null,\n  errors: '',\n  isProcessing: false,\n};\n\nconst authReduser = (state = initialState, action) => {\n  switch (action.type) {\n    case AUTH_REQUEST: {\n      const {\n        payload: { isProcessing },\n      } = action;\n      return { ...state, isProcessing };\n    }\n\n    case AUTH_SUCCESS: {\n      const { payload } = action;\n      return { ...state, ...payload };\n    }\n\n    case AUTH_FAILURE: {\n      const {\n        payload: { errors, isProcessing },\n      } = action;\n      return { ...state, errors, isProcessing };\n    }\n\n    case LOG_OUT:\n      return initialState;\n\n    default:\n      return state;\n  }\n};\n\nexport default authReduser;\n","export const AUTH_REQUEST = 'AUTH_REQUEST';\nexport const AUTH_FAILURE = 'AUTH_FAILURE';\nexport const AUTH_SUCCESS = 'AUTH_SUCCES';\n\nexport const LOG_OUT = 'LOG_OUT';\n","import { combineReducers } from 'redux';\nimport authReducer from './auth';\n\nexport default combineReducers({\n  auth: authReducer,\n});\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import axios from 'axios';\nimport { AUTH_REQUEST, AUTH_FAILURE, AUTH_SUCCESS, LOG_OUT } from './actionTypes';\n\nexport const authRequest = (isProcessing) => {\n  return {\n    type: AUTH_REQUEST,\n    payload: { isProcessing },\n  };\n};\n\nexport const authSuccess = (username, email, token, id, isLogIn = true, isProcessing = false) => {\n  return {\n    type: AUTH_SUCCESS,\n    payload: { username, email, token, id, isLogIn, isProcessing },\n  };\n};\n\nexport const authFailure = (errors, isProcessing = false) => {\n  return { type: AUTH_FAILURE, payload: { errors, isProcessing } };\n};\n\nexport const auth = (mail, password, isLogIn, name) => {\n  return async (dispatch) => {\n    let authData = { username: name, email: mail, password };\n    let apiUrl = 'https://conduit.productionready.io/api/users';\n\n    if (isLogIn) {\n      authData = { email: mail, password };\n      apiUrl = 'https://conduit.productionready.io/api/users/login';\n    }\n    dispatch(authRequest(true));\n    try {\n      const response = await axios.post(apiUrl, {\n        user: authData,\n      });\n      const { username, email, token, id } = response.data.user;\n      localStorage.setItem('token', token);\n      localStorage.setItem('userId', id);\n      dispatch(authSuccess(username, email, token, id));\n    } catch (err) {\n      dispatch(authFailure(err.response.data.errors));\n    }\n  };\n};\n\nexport const logOut = () => {\n  return {\n    type: LOG_OUT,\n  };\n};\n","import * as Yup from 'yup';\n\nconst formSchema = Yup.object().shape({\n  username: Yup.string().max(20, 'Must be shorter').required('Required'),\n  email: Yup.string().email('Invalid email address').required('Required'),\n  password: Yup.string()\n    .min(8, 'Must be longer than 8 characters')\n    .max(40, 'Must be shorter')\n    .matches(\n      /^(?=.*[a-z])(?=.*[A-Z])(?=.*\\d)[a-zA-Z\\d]{8,}$/,\n      'Must have one Big or more letter and one or more number'\n    )\n    .required('Required'),\n});\nexport default formSchema;\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport { WarningTwoTone } from '@ant-design/icons';\nimport PropTypes from 'prop-types';\nimport _ from 'lodash';\n\nconst ServerErrors = (props) => {\n  const { serverErrors } = props;\n\n  if (!serverErrors) {\n    return null;\n  }\n\n  const errorsList = (\n    <ul className=\"ServerErrors\">\n      {Object.keys(serverErrors).map((error, index) => (\n        <li key={_.uniqueId(index)} className=\"ServerErrors-Item\">\n          <WarningTwoTone twoToneColor=\"#cf1322\" />\n          <span className=\"ServerErrors-ItemText\">{`${error}: ${serverErrors[error]}`}</span>\n        </li>\n      ))}\n    </ul>\n  );\n\n  return <div className=\"ServerErrorsWrap\">{errorsList}</div>;\n};\n\nconst mapStateToProps = (state) => {\n  return {\n    serverErrors: state.auth.errors,\n  };\n};\n\nServerErrors.propTypes = {\n  serverErrors: PropTypes.oneOfType([PropTypes.string, PropTypes.object]).isRequired,\n};\n\nexport default connect(mapStateToProps)(ServerErrors);\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport { Input, Button } from 'antd';\nimport { NavLink, Redirect } from 'react-router-dom';\nimport { Formik, Form } from 'formik';\nimport PropTypes from 'prop-types';\nimport { auth, logOut } from '../../redux/actions/auth';\nimport formSchema from './formSchema';\nimport ServerErrors from '../ServerErrors/ServerErrors';\n\nconst initialValues = {\n  username: '',\n  email: '',\n  password: '',\n};\n\nconst RegForm = (props) => {\n  const { isAuth, authFunc, logOutFunc, isProcessing } = props;\n\n  const renderInput = (name, type, label, values, handleChange, handleBlur, errors, touched) => (\n    <label className=\"Form-Label\" htmlFor={name}>\n      {`${label}`}\n      <Input\n        className=\"Form-Field\"\n        type={type}\n        name={name}\n        placeholder={label}\n        id={name}\n        onChange={handleChange}\n        onBlur={handleBlur}\n        value={values[name]}\n        style={touched[name] && errors[name] ? { borderColor: 'red' } : {}} //\n      />\n      {touched[name] && errors[name] && <div className=\"Form-RequredField\">{errors[name]}</div>}\n    </label>\n  );\n\n  const renderForm = (userState) => {\n    if (userState) {\n      return <Redirect to={`${process.env.PUBLIC_URL}/`} />;\n    }\n    return (\n      <>\n        <h1>Signup Page</h1>\n        <div className=\"FormWrapper\">\n          <Formik\n            initialValues={initialValues}\n            validationSchema={formSchema}\n            onSubmit={(values, actions) => {\n              const { email, password, username } = values;\n              authFunc(email, password, false, username);\n              actions.resetForm(initialValues);\n            }}\n          >\n            {({\n              values,\n\n              handleChange,\n              errors,\n              touched,\n              handleBlur,\n              handleSubmit,\n            }) => (\n              <Form className=\"Form\" onSubmit={handleSubmit}>\n                {renderInput(\n                  'username',\n                  'text',\n                  'User Name',\n                  values,\n                  handleChange,\n                  handleBlur,\n                  errors,\n                  touched\n                )}\n                {renderInput(\n                  'email',\n                  'email',\n                  'Email',\n                  values,\n                  handleChange,\n                  handleBlur,\n                  errors,\n                  touched\n                )}\n                {renderInput(\n                  'password',\n                  'password',\n                  'Password',\n                  values,\n                  handleChange,\n                  handleBlur,\n                  errors,\n                  touched\n                )}\n                <Button\n                  loading={isProcessing}\n                  className=\"SubmitBtn Btn\"\n                  type=\"primary\"\n                  htmlType=\"submit\"\n                >\n                  Sign up\n                </Button>\n                <ServerErrors />\n              </Form>\n            )}\n          </Formik>\n          <NavLink to={`${process.env.PUBLIC_URL}/login`} onClick={logOutFunc}>\n            Log in\n          </NavLink>\n        </div>\n      </>\n    );\n  };\n\n  return renderForm(isAuth);\n};\n\nconst mapStateToProps = (state) => {\n  return {\n    isAuth: !!state.auth.token,\n    isProcessing: state.auth.isProcessing,\n  };\n};\n\nconst mapDispatchToProps = (dispatch) => ({\n  authFunc: (email, password, isLogIn, username) =>\n    dispatch(auth(email, password, isLogIn, username)),\n  logOutFunc: () => dispatch(logOut()),\n});\n\nRegForm.propTypes = {\n  authFunc: PropTypes.func,\n  isProcessing: PropTypes.bool,\n  logOutFunc: PropTypes.func,\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(RegForm);\n","import * as Yup from 'yup';\n\nconst formSchema = Yup.object().shape({\n  email: Yup.string().email('Invalid email address').required('Required'),\n  password: Yup.string()\n    .min(8, 'Must be longer than 8 characters')\n    .max(40, 'Must be shorter')\n    .matches(\n      /^(?=.*[a-z])(?=.*[A-Z])(?=.*\\d)[a-zA-Z\\d]{8,}$/,\n      'Must have one Big or more letter and one or more number'\n    )\n    .required('Required'),\n});\nexport default formSchema;\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport { Input, Button } from 'antd';\nimport { NavLink, Redirect } from 'react-router-dom';\nimport { Formik, Form } from 'formik';\nimport PropTypes from 'prop-types';\nimport { auth, logOut } from '../../redux/actions/auth';\nimport formSchema from './formSchema';\nimport ServerErrors from '../ServerErrors/ServerErrors';\n\nconst initialValues = { email: '', password: '' };\n\nconst AuthForm = (props) => {\n  const { isAuth, authFunc, logOutFunc, isProcessing } = props;\n\n  const renderInput = (name, type, label, values, handleChange, handleBlur, errors, touched) => (\n    <label className=\"Form-Label\" htmlFor={name}>\n      {`${label}`}\n      <Input\n        className=\"Form-Field\"\n        type={type}\n        name={name}\n        placeholder={label}\n        id={name}\n        onChange={handleChange}\n        onBlur={handleBlur}\n        value={values[name]}\n        style={touched[name] && errors[name] ? { borderColor: 'red' } : {}} //\n      />\n      {touched[name] && errors[name] && <div className=\"Form-RequredField\">{errors[name]}</div>}\n    </label>\n  );\n\n  const renderForm = (userState) => {\n    if (userState) {\n      return <Redirect to={`${process.env.PUBLIC_URL}/`} />;\n    }\n\n    return (\n      <>\n        <h1>Login Page</h1>\n        <div className=\"FormWrapper\">\n          <Formik\n            initialValues={initialValues}\n            validationSchema={formSchema}\n            onSubmit={(values, actions) => {\n              const { email, password } = values;\n              authFunc(email, password, true);\n              actions.resetForm(initialValues);\n            }}\n          >\n            {({\n              values,\n\n              handleChange,\n              errors,\n              touched,\n              handleBlur,\n              handleSubmit,\n            }) => (\n              <Form className=\"Form\" onSubmit={handleSubmit}>\n                {renderInput(\n                  'email',\n                  'email',\n                  'Email',\n                  values,\n                  handleChange,\n                  handleBlur,\n                  errors,\n                  touched\n                )}\n                {renderInput(\n                  'password',\n                  'password',\n                  'Password',\n                  values,\n                  handleChange,\n                  handleBlur,\n                  errors,\n                  touched\n                )}\n                <Button\n                  loading={isProcessing}\n                  className=\"SubmitBtn Btn\"\n                  type=\"primary\"\n                  htmlType=\"submit\"\n                >\n                  Log in\n                </Button>\n                <ServerErrors />\n              </Form>\n            )}\n          </Formik>\n          <NavLink to={`${process.env.PUBLIC_URL}/signup`} onClick={logOutFunc}>\n            Signup\n          </NavLink>\n        </div>\n      </>\n    );\n  };\n\n  return renderForm(isAuth);\n};\n\nconst mapStateToProps = (state) => {\n  return {\n    isAuth: !!state.auth.token,\n    isProcessing: state.auth.isProcessing,\n  };\n};\n\nconst mapDispatchToProps = (dispatch) => ({\n  authFunc: (email, password, isLogIn) => dispatch(auth(email, password, isLogIn)),\n  logOutFunc: () => dispatch(logOut()),\n});\n\nAuthForm.propTypes = {\n  authFunc: PropTypes.func,\n  isProcessing: PropTypes.bool,\n  logOutFunc: PropTypes.func,\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(AuthForm);\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport { Redirect } from 'react-router-dom';\nimport { Button } from 'antd';\nimport PropTypes from 'prop-types';\nimport { logOut } from '../../redux/actions/auth';\n\nconst UserBio = (props) => {\n  const { username, isAuth, logOutFunc } = props;\n\n  const logOutHandler = () => {\n    logOutFunc();\n    localStorage.removeItem('token');\n    localStorage.removeItem('userId');\n  };\n\n  const renderUserBio = () => {\n    return (\n      <>\n        <h1>Home Page</h1>\n        <div className=\"UserBioWrap\">\n          <div className=\"UserBio\">{username}</div>\n          <Button className=\"Btn\" type=\"primary\" onClick={logOutHandler}>\n            Log out\n          </Button>\n        </div>\n      </>\n    );\n  };\n\n  return isAuth ? renderUserBio() : <Redirect to={`${process.env.PUBLIC_URL}/login`} />;\n};\n\nconst mapStateToProps = (state) => {\n  return {\n    username: state.auth.username,\n    isAuth: !!state.auth.token,\n  };\n};\n\nconst mapDispatchToProps = (dispatch) => {\n  return { logOutFunc: () => dispatch(logOut()) };\n};\n\nUserBio.propTypes = {\n  username: PropTypes.string.isRequired,\n  isAuth: PropTypes.bool.isRequired,\n  logOutFunc: PropTypes.func.isRequired,\n};\nexport default connect(mapStateToProps, mapDispatchToProps)(UserBio);\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport { Route, Switch, Redirect } from 'react-router-dom';\nimport RegForm from './components/RegForm/RegForm';\nimport AuthForm from './components/AuthForm/AuthForm';\nimport UserBio from './components/UserBio/UserBio';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Switch>\n        <Route path={`${process.env.PUBLIC_URL}/signup`} component={RegForm} />\n        <Route path={`${process.env.PUBLIC_URL}/login`} component={AuthForm} />\n        <Route path={`${process.env.PUBLIC_URL}/`} component={UserBio} />\n        <Redirect to={`${process.env.PUBLIC_URL}/`} />\n      </Switch>\n    </div>\n  );\n}\n\nconst mapStateToProps = (props) => {\n  const { user, token, email, isLogIn } = props;\n  return {\n    user,\n    token,\n    email,\n    isLogIn,\n  };\n};\n\nexport default connect(mapStateToProps)(App);\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'antd/dist/antd.css';\nimport './index.scss';\nimport { createStore, applyMiddleware, compose } from 'redux';\nimport { Provider } from 'react-redux';\nimport thunk from 'redux-thunk';\nimport { BrowserRouter } from 'react-router-dom';\nimport rootReducer from './redux/redusers/rootReduser';\nimport * as serviceWorker from './serviceWorker';\nimport App from './App';\n\nconst composeEnhancers =\n  typeof window === 'object' && window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__\n    ? window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__({\n        // Specify extension’s options like name, actionsBlacklist, actionsCreators, serialize...\n      })\n    : compose;\n\nconst store = createStore(rootReducer, composeEnhancers(applyMiddleware(thunk)));\n\nconst app = (\n  <BrowserRouter>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </BrowserRouter>\n);\n\nReactDOM.render(app, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}