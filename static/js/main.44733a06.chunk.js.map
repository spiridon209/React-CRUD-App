{"version":3,"sources":["redux/redusers/auth.js","redux/actions/actionTypes.js","redux/redusers/createArticle.js","redux/redusers/getArticles.js","redux/redusers/updateArticle.js","redux/redusers/deleteArticle.js","redux/redusers/rootReduser.js","serviceWorker.js","api/apiUrls.js","api/authRequest.js","localStorage.js","redux/actions/auth.js","components/RegForm/formSchema.js","components/ServerErrors/ServerErrors.jsx","components/RegForm/RegForm.jsx","components/AuthForm/AuthForm.jsx","components/UserBio/UserBio.jsx","api/createArticle.js","redux/actions/createArticle.js","components/CreateArticle/createArticleSchema.js","components/CreateArticle/CreateArticle.jsx","hoc/Layout/Layout.jsx","api/getArticlesList.js","api/favoriteUnfavoriteArticle.js","redux/actions/getArticles.js","api/getArticle.js","api/deleteArticle.js","components/Article/Article.jsx","redux/actions/deleteArticle.js","components/ArticlePreview/ArticlePreview.jsx","components/ArticlesPagination/ArticlesPagination.jsx","components/ArticleList/ArticleList.jsx","routesPaths.js","components/Navigation/Navigation.jsx","components/ArticleEditor/updateArticleSchema.js","api/updateArticle.js","components/ArticleEditor/ArticleEditor.jsx","redux/actions/updateArticle.js","hoc/PublicRoute/PublicRoute.jsx","hoc/PrivateRoute/PrivateRoute.jsx","App.jsx","index.jsx"],"names":["initialState","token","username","errors","isProcessing","isLogIn","authReduser","state","action","type","payload","createArticleReduser","articles","isLoading","articlesCount","currentPage","getArticlesReducer","article","map","art","slug","favorited","favoritesCount","updateArticleReduser","deleteArticleReduser","combineReducers","auth","authReducer","createArticle","getArticles","updateArticle","updateArticleReducer","deleteArticle","deleteArticleReducer","Boolean","window","location","hostname","match","rootApiUrl","urls","getLoginPath","getSignupPath","getAutoLoginPath","getCreateArticlePath","getFavoriteArticlePath","getArticlePath","getArticlesListPath","offset","authFetch","data","a","authUrl","axios","post","user","response","regFetch","regUrl","autoLogInFetch","headers","autoLogInUrl","get","getToken","localStorage","getItem","setToken","setItem","authRequest","authSuccess","authFailure","logOut","removeItem","formSchema","Yup","shape","max","required","email","password","min","matches","connect","serverErrors","props","errorsList","className","Object","keys","error","index","key","_","uniqueId","WarningTwoTone","twoToneColor","initialValues","isAuth","dispatch","regFunc","mail","name","reg","resetErrorsFunc","renderInput","label","values","handleChange","handleBlur","touched","htmlFor","placeholder","id","onChange","onBlur","value","style","borderColor","validationSchema","onSubmit","actions","resetForm","handleSubmit","loading","htmlType","to","process","onClick","authFunc","logOutFunc","isLogin","logOutHandler","createArticleUrl","createArticleFetch","Authorization","createArticleFailure","createArticleSchema","title","description","content","tags","TextArea","Input","createArticleFunc","createArticleSuccess","history","useHistory","useState","setResponse","Component","tagList","split","body","err","push","Layout","children","getArticlesFetch","getArticlesListUrl","favoriteArticleFetch","favoriteArticleUrl","unfavoriteArticleFetch","delete","getArticlesFailure","articleFavorited","favoriteArticle","unfavoriteArticle","getArticleFetch","getArticleUrl","deleteArticleFetch","deleteArticleUrl","deleteProcessing","favoriteArticleFunc","unfavoriteArticleFunc","deleteArticleFunc","deleteAticleFetch","withRouter","params","setArticle","useEffect","then","updatedArticle","likeBtnState","Date","createdAt","toDateString","author","tag","evt","preventDefault","stopPropagation","LikeTwoTone","danger","answer","status","toArticlePage","onKeyDown","role","tabIndex","switchPage","showSizeChanger","current","total","page","Math","floor","getArticlesFunc","ArticlesPagination","routesPaths","getHome","getArticle","getReg","getAuth","getCreateArticle","getArticleEditor","Navigation","notAuthLinks","exact","authLinks","updateArticleSchema","updateArticleFetch","updateArticleUrl","put","updateArticleFunc","updateAticleFetch","length","join","PublicRoute","component","restricted","rest","render","PrivateRoute","autoLogInFunc","TOKEN","routes","path","ArticleList","Article","RegForm","AuthForm","ArticleEditor","CreateArticle","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","rootReducer","applyMiddleware","thunk","app","ReactDOM","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","console","message"],"mappings":"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","file":"static/js/main.44733a06.chunk.js","sourcesContent":["import {\r\n  AUTH_REQUEST,\r\n  AUTH_FAILURE,\r\n  AUTH_SUCCESS,\r\n  LOG_OUT,\r\n  RESET_ERRORS,\r\n} from '../actions/actionTypes';\r\n\r\nconst initialState = {\r\n  token: null,\r\n  username: '',\r\n  errors: '',\r\n  isProcessing: false,\r\n  isLogIn: false,\r\n};\r\n\r\nconst authReduser = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case AUTH_REQUEST: {\r\n      const {\r\n        payload: { isProcessing },\r\n      } = action;\r\n      return { ...state, isProcessing };\r\n    }\r\n\r\n    case AUTH_SUCCESS: {\r\n      const { payload } = action;\r\n      return { ...state, ...payload };\r\n    }\r\n\r\n    case AUTH_FAILURE: {\r\n      const {\r\n        payload: { errors, isProcessing },\r\n      } = action;\r\n      return { ...state, errors, isProcessing };\r\n    }\r\n\r\n    case LOG_OUT:\r\n    case RESET_ERRORS:\r\n      return initialState;\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default authReduser;\r\n","export const AUTH_REQUEST = 'AUTH_REQUEST';\r\nexport const AUTH_FAILURE = 'AUTH_FAILURE';\r\nexport const AUTH_SUCCESS = 'AUTH_SUCCES';\r\n\r\nexport const REG_REQUEST = 'REG_REQUEST';\r\nexport const REG_FAILURE = 'REG_FAILURE';\r\nexport const REG_SUCCESS = 'REG_SUCCES';\r\n\r\nexport const LOG_OUT = 'LOG_OUT';\r\nexport const RESET_ERRORS = 'RESET_ERRORS';\r\n\r\nexport const CREATE_ARTICLE_REQUEST = 'CREATE_ARTICLE_REQUEST';\r\nexport const CREATE_ARTICLE_FAILURE = 'CREATE_ARTICLE_FAILURE';\r\nexport const CREATE_ARTICLE_SUCCESS = 'CREATE_ARTICLE_SUCCES';\r\n\r\nexport const UPDATE_ARTICLE_REQUEST = 'UPDATE_ARTICLE_REQUEST';\r\nexport const UPDATE_ARTICLE_FAILURE = 'UPDATE_ARTICLE_FAILURE';\r\nexport const UPDATE_ARTICLE_SUCCESS = 'UPDATE_ARTICLE_SUCCES';\r\n\r\nexport const DELETE_ARTICLE_REQUEST = 'DELETE_ARTICLE_REQUEST';\r\nexport const DELETE_ARTICLE_FAILURE = 'DELETE_ARTICLE_FAILURE';\r\nexport const DELETE_ARTICLE_SUCCESS = 'DELETE_ARTICLE_SUCCES';\r\n\r\nexport const GET_ARTICLES_REQUEST = 'GET_ARTICLES_REQUEST';\r\nexport const GET_ARTICLES_FAILURE = 'GET_ARTICLES_FAILURE';\r\nexport const GET_ARTICLES_SUCCESS = 'GET_ARTICLES_SUCCES';\r\n\r\nexport const ARTICLE_FAVORITED = 'ARTICLE_FAVORITED';\r\nexport const ARTICLE_UNFAVORITED = 'ARTICLE_UNFAVORITED';\r\n\r\nexport const ARTICLES_PAGINATION = 'ARTICLES_PAGINATION';\r\n","import {\n  CREATE_ARTICLE_REQUEST,\n  CREATE_ARTICLE_FAILURE,\n  CREATE_ARTICLE_SUCCESS,\n} from '../actions/actionTypes';\n\nconst initialState = {\n  isProcessing: false,\n  errors: '',\n};\n\nconst createArticleReduser = (state = initialState, action) => {\n  switch (action.type) {\n    case CREATE_ARTICLE_REQUEST: {\n      return { ...state, isProcessing: true };\n    }\n\n    case CREATE_ARTICLE_SUCCESS: {\n      return {\n        ...state,\n        isProcessing: false,\n      };\n    }\n\n    case CREATE_ARTICLE_FAILURE: {\n      const { payload } = action;\n      return { ...state, errors: payload, isProcessing: false };\n    }\n\n    default:\n      return state;\n  }\n};\n\nexport default createArticleReduser;\n","import {\n  GET_ARTICLES_REQUEST,\n  GET_ARTICLES_SUCCESS,\n  GET_ARTICLES_FAILURE,\n  ARTICLE_FAVORITED,\n  ARTICLE_UNFAVORITED,\n  ARTICLES_PAGINATION,\n} from '../actions/actionTypes';\n\nconst initialState = {\n  articles: [],\n  isLoading: false,\n  errors: '',\n  articlesCount: 0,\n  currentPage: 1,\n};\n\nconst getArticlesReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case GET_ARTICLES_REQUEST: {\n      return { ...state, isLoading: true };\n    }\n    case GET_ARTICLES_SUCCESS: {\n      const {\n        payload: { articles, articlesCount },\n      } = action;\n      return { ...state, isLoading: false, articles, articlesCount };\n    }\n    case GET_ARTICLES_FAILURE: {\n      const {\n        payload: { errors },\n      } = action;\n      return { ...state, errors, isLoading: false };\n    }\n    case ARTICLE_FAVORITED:\n    case ARTICLE_UNFAVORITED: {\n      const {\n        payload: { article },\n      } = action;\n      const { articles } = state;\n      return {\n        ...state,\n\n        articles: articles.map((art) => {\n          if (art.slug === article.slug) {\n            return {\n              ...article,\n              favorited: article.favorited,\n              favoritesCount: article.favoritesCount,\n            };\n          }\n          return art;\n        }),\n      };\n    }\n    case ARTICLES_PAGINATION: {\n      const {\n        payload: { currentPage },\n      } = action;\n      return {\n        ...state,\n        currentPage,\n      };\n    }\n    default:\n      return state;\n  }\n};\n\nexport default getArticlesReducer;\n","import {\n  UPDATE_ARTICLE_REQUEST,\n  UPDATE_ARTICLE_FAILURE,\n  UPDATE_ARTICLE_SUCCESS,\n} from '../actions/actionTypes';\n\nconst initialState = {\n  isProcessing: false,\n\n  errors: '',\n};\n\nconst updateArticleReduser = (state = initialState, action) => {\n  switch (action.type) {\n    case UPDATE_ARTICLE_REQUEST: {\n      return { ...state, isProcessing: true };\n    }\n\n    case UPDATE_ARTICLE_SUCCESS: {\n      return {\n        ...state,\n        isProcessing: false,\n      };\n    }\n\n    case UPDATE_ARTICLE_FAILURE: {\n      const { payload } = action;\n      return { ...state, errors: payload, isProcessing: false };\n    }\n\n    default:\n      return state;\n  }\n};\n\nexport default updateArticleReduser;\n","import {\n  DELETE_ARTICLE_REQUEST,\n  DELETE_ARTICLE_FAILURE,\n  DELETE_ARTICLE_SUCCESS,\n} from '../actions/actionTypes';\n\nconst initialState = {\n  isProcessing: false,\n  errors: '',\n};\n\nconst deleteArticleReduser = (state = initialState, action) => {\n  switch (action.type) {\n    case DELETE_ARTICLE_REQUEST: {\n      return { ...state, isProcessing: true };\n    }\n\n    case DELETE_ARTICLE_SUCCESS: {\n      return {\n        ...state,\n        isProcessing: false,\n      };\n    }\n\n    case DELETE_ARTICLE_FAILURE: {\n      const { payload } = action;\n      return { ...state, errors: payload, isProcessing: false };\n    }\n\n    default:\n      return state;\n  }\n};\n\nexport default deleteArticleReduser;\n","import { combineReducers } from 'redux';\nimport authReducer from './auth';\nimport createArticleReduser from './createArticle';\nimport getArticlesReducer from './getArticles';\nimport updateArticleReducer from './updateArticle';\nimport deleteArticleReducer from './deleteArticle';\n\nexport default combineReducers({\n  auth: authReducer,\n  createArticle: createArticleReduser,\n  getArticles: getArticlesReducer,\n  updateArticle: updateArticleReducer,\n  deleteArticle: deleteArticleReducer,\n});\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","const rootApiUrl = 'https://conduit.productionready.io/api';\r\n\r\nconst urls = {\r\n  getLoginPath: () => `${rootApiUrl}/users/login`,\r\n  getSignupPath: () => `${rootApiUrl}/users`,\r\n  getAutoLoginPath: () => `${rootApiUrl}/user`,\r\n  getCreateArticlePath: () => `${rootApiUrl}/articles`,\r\n  getFavoriteArticlePath: (slug) => `${rootApiUrl}/articles/${slug}/favorite`,\r\n  getArticlePath: (slug) => `${rootApiUrl}/articles/${slug}`,\r\n  getArticlesListPath: (offset) => `${rootApiUrl}/articles?limit=10&offset=${offset}`,\r\n};\r\n\r\nexport default urls;\r\n","import axios from 'axios';\r\nimport urls from './apiUrls';\r\n\r\nexport const authFetch = async (data) => {\r\n  const authUrl = urls.getLoginPath();\r\n  const response = await axios.post(authUrl, {\r\n    user: data,\r\n  });\r\n  return response;\r\n};\r\n\r\nexport const regFetch = async (data) => {\r\n  const regUrl = urls.getSignupPath();\r\n  const response = await axios.post(regUrl, {\r\n    user: data,\r\n  });\r\n  return response;\r\n};\r\n\r\nexport const autoLogInFetch = async (headers) => {\r\n  const autoLogInUrl = urls.getAutoLoginPath();\r\n  const response = await axios.get(autoLogInUrl, { headers });\r\n  return response;\r\n};\r\n","export const getToken = () => localStorage.getItem('token');\r\nexport const removeToken = () => localStorage.removeItem('token');\r\nexport const setToken = (token) => localStorage.setItem('token', token);\r\n","import { authFetch, regFetch, autoLogInFetch } from '../../api/authRequest';\r\nimport { AUTH_REQUEST, AUTH_FAILURE, AUTH_SUCCESS, LOG_OUT, RESET_ERRORS } from './actionTypes';\r\nimport { removeToken, setToken, getToken } from '../../localStorage';\r\n\r\nexport const authRequest = (isProcessing) => {\r\n  return {\r\n    type: AUTH_REQUEST,\r\n    payload: { isProcessing },\r\n  };\r\n};\r\n\r\nexport const authSuccess = (username, token, isLogIn = true, isProcessing = false) => {\r\n  setToken(token);\r\n  return {\r\n    type: AUTH_SUCCESS,\r\n    payload: { username, token, isLogIn, isProcessing },\r\n  };\r\n};\r\n\r\nexport const authFailure = (errors, isProcessing = false) => {\r\n  return { type: AUTH_FAILURE, payload: { errors, isProcessing } };\r\n};\r\n\r\nexport const auth = (mail, password) => {\r\n  return async (dispatch) => {\r\n    dispatch(authRequest(true));\r\n    try {\r\n      const response = await authFetch({ email: mail, password });\r\n      const { username, token } = response.data.user;\r\n      dispatch(authSuccess(username, token));\r\n    } catch (err) {\r\n      dispatch(authFailure(err.response.data.errors));\r\n    }\r\n  };\r\n};\r\n\r\nexport const reg = (mail, password, name) => {\r\n  return async (dispatch) => {\r\n    dispatch(authRequest(true));\r\n    try {\r\n      const response = await regFetch({\r\n        username: name,\r\n        email: mail,\r\n        password,\r\n      });\r\n      const { username, token } = response.data.user;\r\n      dispatch(authSuccess(username, token));\r\n    } catch (err) {\r\n      dispatch(authFailure(err.response.data.errors));\r\n    }\r\n  };\r\n};\r\n\r\nexport const logOut = () => {\r\n  removeToken();\r\n\r\n  return {\r\n    type: LOG_OUT,\r\n  };\r\n};\r\n\r\nexport const autoLogIn = () => {\r\n  return async (dispatch) => {\r\n    dispatch(authRequest(true));\r\n    try {\r\n      const TOKEN = getToken();\r\n      if (!TOKEN) {\r\n        dispatch(logOut());\r\n        return;\r\n      }\r\n      const headers = { Authorization: `Token ${TOKEN}` };\r\n      const response = await autoLogInFetch(headers);\r\n      const { username, token } = response.data.user;\r\n      dispatch(authSuccess(username, token));\r\n    } catch (err) {\r\n      dispatch(authFailure(err.response.data.errors));\r\n    }\r\n  };\r\n};\r\n\r\nexport const resetErrors = () => {\r\n  return {\r\n    type: RESET_ERRORS,\r\n  };\r\n};\r\n","import * as Yup from 'yup';\n\nconst formSchema = Yup.object().shape({\n  username: Yup.string().max(20, 'Must be shorter').required('Required'),\n  email: Yup.string().email('Invalid email address').required('Required'),\n  password: Yup.string()\n    .min(8, 'Must be longer than 8 characters')\n    .max(40, 'Must be shorter')\n    .matches(\n      /^(?=.*[a-z])(?=.*[A-Z])(?=.*\\d)[a-zA-Z\\d]{8,}$/,\n      'Must have one Big or more letter and one or more number'\n    )\n    .required('Required'),\n});\nexport default formSchema;\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport { WarningTwoTone } from '@ant-design/icons';\nimport PropTypes from 'prop-types';\nimport _ from 'lodash';\nimport './ServerErrors.scss';\n\nconst ServerErrors = (props) => {\n  const { serverErrors } = props;\n\n  if (!serverErrors) {\n    return null;\n  }\n\n  const errorsList = (\n    <ul className=\"ServerErrors\">\n      {Object.keys(serverErrors).map((error, index) => (\n        <li key={_.uniqueId(index)} className=\"ServerErrors-Item\">\n          <WarningTwoTone twoToneColor=\"#cf1322\" />\n          <span className=\"ServerErrors-ItemText\">{`${error}: ${serverErrors[error]}`}</span>\n        </li>\n      ))}\n    </ul>\n  );\n\n  return <div className=\"ServerErrorsWrap\">{errorsList}</div>;\n};\n\nconst mapStateToProps = (state) => {\n  return {\n    serverErrors: state.auth.errors,\n  };\n};\n\nServerErrors.propTypes = {\n  serverErrors: PropTypes.oneOfType([PropTypes.string, PropTypes.object]).isRequired,\n};\n\nexport default connect(mapStateToProps)(ServerErrors);\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport { Input, Button } from 'antd';\nimport { NavLink } from 'react-router-dom';\nimport { Formik, Form } from 'formik';\nimport PropTypes from 'prop-types';\nimport { reg, resetErrors } from '../../redux/actions/auth';\nimport formSchema from './formSchema';\nimport ServerErrors from '../ServerErrors/ServerErrors';\n\nconst initialValues = {\n  username: '',\n  email: '',\n  password: '',\n};\n\nconst RegForm = (props) => {\n  const { isAuth, regFunc, resetErrorsFunc, isProcessing } = props;\n\n  const renderInput = (name, type, label, values, handleChange, handleBlur, errors, touched) => (\n    <label className=\"Form-Label\" htmlFor={name}>\n      {`${label}`}\n      <Input\n        className=\"Form-Field\"\n        type={type}\n        name={name}\n        placeholder={label}\n        id={name}\n        onChange={handleChange}\n        onBlur={handleBlur}\n        value={values[name]}\n        style={touched[name] && errors[name] ? { borderColor: 'red' } : {}} //\n      />\n      {touched[name] && errors[name] && <div className=\"Form-RequredField\">{errors[name]}</div>}\n    </label>\n  );\n\n  const renderForm = () => {\n    return (\n      <>\n        <h1>Signup Page</h1>\n        <div className=\"FormWrapper\">\n          <Formik\n            initialValues={initialValues}\n            validationSchema={formSchema}\n            onSubmit={(values, actions) => {\n              const { email, password, username } = values;\n              regFunc(email, password, username);\n              if (isAuth) {\n                actions.resetForm(initialValues);\n              }\n            }}\n          >\n            {({ values, handleChange, errors, touched, handleBlur, handleSubmit }) => (\n              <Form className=\"Form\" onSubmit={handleSubmit}>\n                {renderInput(\n                  'username',\n                  'text',\n                  'User Name',\n                  values,\n                  handleChange,\n                  handleBlur,\n                  errors,\n                  touched\n                )}\n                {renderInput(\n                  'email',\n                  'email',\n                  'Email',\n                  values,\n                  handleChange,\n                  handleBlur,\n                  errors,\n                  touched\n                )}\n                {renderInput(\n                  'password',\n                  'password',\n                  'Password',\n                  values,\n                  handleChange,\n                  handleBlur,\n                  errors,\n                  touched\n                )}\n                <Button\n                  loading={isProcessing}\n                  className=\"SubmitBtn Btn\"\n                  type=\"primary\"\n                  htmlType=\"submit\"\n                >\n                  Sign up\n                </Button>\n                <ServerErrors />\n              </Form>\n            )}\n          </Formik>\n          <NavLink to={`${process.env.PUBLIC_URL}/login`} onClick={resetErrorsFunc}>\n            Log in\n          </NavLink>\n        </div>\n      </>\n    );\n  };\n\n  return renderForm();\n};\n\nconst mapStateToProps = (state) => {\n  return {\n    isAuth: !!state.auth.token,\n    isProcessing: state.auth.isProcessing,\n  };\n};\n\nconst mapDispatchToProps = (dispatch) => ({\n  regFunc: (email, password, username) => dispatch(reg(email, password, username)),\n  resetErrorsFunc: () => dispatch(resetErrors()),\n});\n\nRegForm.propTypes = {\n  regFunc: PropTypes.func,\n  isProcessing: PropTypes.bool,\n  resetErrorsFunc: PropTypes.func,\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(RegForm);\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport { Input, Button } from 'antd';\nimport { NavLink } from 'react-router-dom';\nimport { Formik, Form } from 'formik';\nimport PropTypes from 'prop-types';\nimport { auth, resetErrors } from '../../redux/actions/auth';\n// import formSchema from './formSchema';\nimport ServerErrors from '../ServerErrors/ServerErrors';\n\nconst initialValues = { email: '', password: '' };\n\nconst AuthForm = (props) => {\n  const { isAuth, authFunc, resetErrorsFunc, isProcessing } = props;\n\n  const renderInput = (name, type, label, values, handleChange, handleBlur, errors, touched) => (\n    <label className=\"Form-Label\" htmlFor={name}>\n      {`${label}`}\n      <Input\n        className=\"Form-Field\"\n        type={type}\n        name={name}\n        placeholder={label}\n        id={name}\n        onChange={handleChange}\n        onBlur={handleBlur}\n        value={values[name]}\n        style={touched[name] && errors[name] ? { borderColor: 'red' } : {}} //\n      />\n      {touched[name] && errors[name] && <div className=\"Form-RequredField\">{errors[name]}</div>}\n    </label>\n  );\n\n  const renderForm = () => {\n    return (\n      <>\n        <h1>Login Page</h1>\n        <div className=\"FormWrapper\">\n          <Formik\n            initialValues={initialValues}\n            onSubmit={(values, actions) => {\n              const { email, password } = values;\n              authFunc(email, password);\n              if (isAuth) {\n                actions.resetForm(initialValues);\n              }\n            }}\n          >\n            {({ values, handleChange, errors, touched, handleBlur, handleSubmit }) => (\n              <Form className=\"Form\" onSubmit={handleSubmit}>\n                {renderInput(\n                  'email',\n                  'email',\n                  'Email',\n                  values,\n                  handleChange,\n                  handleBlur,\n                  errors,\n                  touched\n                )}\n                {renderInput(\n                  'password',\n                  'password',\n                  'Password',\n                  values,\n                  handleChange,\n                  handleBlur,\n                  errors,\n                  touched\n                )}\n                <Button\n                  loading={isProcessing}\n                  className=\"SubmitBtn Btn\"\n                  type=\"primary\"\n                  htmlType=\"submit\"\n                >\n                  Log in\n                </Button>\n                <ServerErrors />\n              </Form>\n            )}\n          </Formik>\n          <NavLink to={`${process.env.PUBLIC_URL}/signup`} onClick={resetErrorsFunc}>\n            Signup\n          </NavLink>\n        </div>\n      </>\n    );\n  };\n\n  return renderForm();\n};\n\nconst mapStateToProps = (state) => {\n  return {\n    isAuth: !!state.auth.token,\n    isProcessing: state.auth.isProcessing,\n  };\n};\n\nconst mapDispatchToProps = (dispatch) => ({\n  authFunc: (email, password) => dispatch(auth(email, password)),\n  resetErrorsFunc: () => dispatch(resetErrors()),\n});\n\nAuthForm.propTypes = {\n  authFunc: PropTypes.func,\n  isProcessing: PropTypes.bool,\n  resetErrorsFunc: PropTypes.func,\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(AuthForm);\n","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { Button } from 'antd';\r\nimport PropTypes from 'prop-types';\r\nimport { logOut } from '../../redux/actions/auth';\r\nimport './UserBio.scss';\r\n\r\nconst UserBio = (props) => {\r\n  const { username, logOutFunc, isLogin } = props;\r\n\r\n  const logOutHandler = () => {\r\n    logOutFunc();\r\n  };\r\n\r\n  const renderUserBio = () => {\r\n    return (\r\n      <div className=\"UserBioWrap\">\r\n        <div className=\"UserBio\">{username}</div>\r\n        <Button className=\"Btn\" type=\"primary\" onClick={logOutHandler}>\r\n          Log out\r\n        </Button>\r\n      </div>\r\n    );\r\n  };\r\n\r\n  return isLogin ? renderUserBio() : null;\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    username: state.auth.username,\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return { logOutFunc: () => dispatch(logOut()) };\r\n};\r\n\r\nUserBio.propTypes = {\r\n  username: PropTypes.string.isRequired,\r\n  logOutFunc: PropTypes.func.isRequired,\r\n};\r\nexport default connect(mapStateToProps, mapDispatchToProps)(UserBio);\r\n","import axios from 'axios';\r\nimport urls from './apiUrls';\r\nimport { getToken } from '../localStorage';\r\n\r\nconst createArticleUrl = urls.getCreateArticlePath();\r\n\r\nconst createArticleFetch = async (data) => {\r\n  const token = getToken();\r\n  const headers = { Authorization: `Token ${token}` };\r\n  const response = await axios.post(\r\n    createArticleUrl,\r\n    {\r\n      article: data,\r\n    },\r\n    { headers }\r\n  );\r\n  return response;\r\n};\r\n\r\nexport default createArticleFetch;\r\n","import createArticleFetch from '../../api/createArticle';\nimport {\n  CREATE_ARTICLE_REQUEST,\n  CREATE_ARTICLE_FAILURE,\n  CREATE_ARTICLE_SUCCESS,\n} from './actionTypes';\n\nexport const createArticleRequest = () => {\n  return {\n    type: CREATE_ARTICLE_REQUEST,\n  };\n};\n\nexport const createArticleSuccess = (payload) => {\n  return {\n    type: CREATE_ARTICLE_SUCCESS,\n    payload,\n  };\n};\n\nexport const createArticleFailure = (payload) => {\n  return { type: CREATE_ARTICLE_FAILURE, payload };\n};\n\nexport const createArticle = (data) => {\n  return async (dispatch) => {\n    dispatch(createArticleRequest());\n    try {\n      await createArticleFetch(data);\n      dispatch(createArticleSuccess());\n    } catch (err) {\n      dispatch(createArticleFailure(err.response.data.errors));\n    }\n  };\n};\n","import * as Yup from 'yup';\n\nconst createArticleSchema = Yup.object().shape({\n  title: Yup.string().required('Required'),\n  description: Yup.string().required('Required'),\n  content: Yup.string().required('Required'),\n  tags: Yup.string(),\n});\nexport default createArticleSchema;\n","import React, { useState } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { useHistory } from 'react-router-dom';\r\nimport './CreateArticle.scss';\r\nimport { Formik, Form } from 'formik';\r\nimport { Input, Button } from 'antd';\r\nimport PropTypes from 'prop-types';\r\nimport { createArticle } from '../../redux/actions/createArticle';\r\nimport createArticleSchema from './createArticleSchema';\r\n\r\nconst { TextArea } = Input;\r\n\r\nconst initialValues = { title: '', description: '', content: '', tags: '' };\r\n\r\nconst CreateArticle = (props) => {\r\n  const history = useHistory();\r\n  const { createArticleFunc, isProcessing } = props;\r\n  const [response, setResponse] = useState('');\r\n  const renderInput = (\r\n    name,\r\n    type,\r\n    label,\r\n    values,\r\n    handleChange,\r\n    handleBlur,\r\n    errors,\r\n    touched,\r\n    Component\r\n  ) => (\r\n    <label className=\"CreateArticle-Label\" htmlFor={name}>\r\n      {`${label}`}\r\n      <Component\r\n        className=\"CreateArticle-Field\"\r\n        type={type}\r\n        name={name}\r\n        placeholder={label}\r\n        id={name}\r\n        onChange={handleChange}\r\n        onBlur={handleBlur}\r\n        value={values[name]}\r\n        style={touched[name] && errors[name] ? { borderColor: 'red' } : {}} //\r\n      />\r\n      {touched[name] && errors[name] && (\r\n        <div className=\"CreateArticle-RequiredField\">{errors[name]}</div>\r\n      )}\r\n    </label>\r\n  );\r\n\r\n  const renderForm = () => {\r\n    return (\r\n      <div className=\"CreateArticle\">\r\n        <h1>New article</h1>\r\n        <div className=\"CreateArticle-FormWrapper\">\r\n          <Formik\r\n            initialValues={initialValues}\r\n            validationSchema={createArticleSchema}\r\n            onSubmit={(values, actions) => {\r\n              const { title, description, content, tags } = values;\r\n              const tagList = tags === '' ? [] : tags.split(',');\r\n              try {\r\n                createArticleFunc({\r\n                  title,\r\n                  description,\r\n                  body: content,\r\n                  tagList,\r\n                });\r\n                setResponse(() => 'Article was created succssesfully !');\r\n              } catch (err) {\r\n                setResponse(() => `Ooops somthing going wrong ${err}`);\r\n              }\r\n              actions.resetForm();\r\n              history.push(`${process.env.PUBLIC_URL}/`);\r\n            }}\r\n          >\r\n            {({ values, handleChange, errors, touched, handleBlur, handleSubmit }) => (\r\n              <Form className=\"CreateArticle-Form\" onSubmit={handleSubmit}>\r\n                {renderInput(\r\n                  'title',\r\n                  'text',\r\n                  'Title',\r\n                  values,\r\n                  handleChange,\r\n                  handleBlur,\r\n                  errors,\r\n                  touched,\r\n                  Input\r\n                )}\r\n                {renderInput(\r\n                  'description',\r\n                  'text',\r\n                  'Description',\r\n                  values,\r\n                  handleChange,\r\n                  handleBlur,\r\n                  errors,\r\n                  touched,\r\n                  Input\r\n                )}\r\n                {renderInput(\r\n                  'content',\r\n                  'text',\r\n                  'Article content',\r\n                  values,\r\n                  handleChange,\r\n                  handleBlur,\r\n                  errors,\r\n                  touched,\r\n                  TextArea\r\n                )}\r\n                {renderInput(\r\n                  'tags',\r\n                  'text',\r\n                  'Tags',\r\n                  values,\r\n                  handleChange,\r\n                  handleBlur,\r\n                  errors,\r\n                  touched,\r\n                  Input\r\n                )}\r\n                <Button\r\n                  loading={isProcessing}\r\n                  className=\"SubmitBtn Btn\"\r\n                  type=\"primary\"\r\n                  htmlType=\"submit\"\r\n                >\r\n                  create article\r\n                </Button>\r\n              </Form>\r\n            )}\r\n          </Formik>\r\n          <div className=\"CreateArticle-Response\">{response}</div>\r\n        </div>\r\n      </div>\r\n    );\r\n  };\r\n\r\n  return renderForm();\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    isProcessing: state.createArticle.isProcessing,\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n  createArticleFunc: (data) => dispatch(createArticle(data)),\r\n});\r\n\r\nCreateArticle.propTypes = {\r\n  createAricleFunc: PropTypes.func,\r\n  isProcessing: PropTypes.bool,\r\n  response: PropTypes.string,\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(CreateArticle);\r\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst Layout = (props) => {\n  const { children } = props;\n  return <main>{children}</main>;\n};\n\nexport default Layout;\n\nLayout.propTypes = {\n  children: PropTypes.element.isRequired,\n};\n","import axios from 'axios';\r\nimport urls from './apiUrls';\r\nimport { getToken } from '../localStorage';\r\n\r\nconst getArticlesFetch = async (offset) => {\r\n  const token = getToken();\r\n  const headers = { Authorization: `Token ${token}` };\r\n  const getArticlesListUrl = urls.getArticlesListPath(offset);\r\n  if (!token) {\r\n    const response = await axios.get(getArticlesListUrl);\r\n    return response;\r\n  }\r\n  const response = await axios.get(getArticlesListUrl, { headers });\r\n  return response;\r\n};\r\n\r\nexport default getArticlesFetch;\r\n","import axios from 'axios';\r\nimport urls from './apiUrls';\r\nimport { getToken } from '../localStorage';\r\n\r\nexport const favoriteArticleFetch = async (slug) => {\r\n  const token = getToken();\r\n  const headers = { Authorization: `Token ${token}` };\r\n  const favoriteArticleUrl = urls.getFavoriteArticlePath(slug);\r\n  const response = await axios.post(favoriteArticleUrl, null, { headers });\r\n  return response;\r\n};\r\n\r\nexport const unfavoriteArticleFetch = async (slug) => {\r\n  const token = getToken();\r\n  const headers = { Authorization: `Token ${token}` };\r\n  const favoriteArticleUrl = urls.getFavoriteArticlePath(slug);\r\n  const response = await axios.delete(favoriteArticleUrl, { headers });\r\n  return response;\r\n};\r\n","import getArticlesFetch from '../../api/getArticlesList';\nimport { favoriteArticleFetch, unfavoriteArticleFetch } from '../../api/favoriteUnfavoriteArticle';\nimport {\n  GET_ARTICLES_REQUEST,\n  GET_ARTICLES_SUCCESS,\n  GET_ARTICLES_FAILURE,\n  ARTICLE_FAVORITED,\n  ARTICLE_UNFAVORITED,\n  ARTICLES_PAGINATION,\n} from './actionTypes';\n\nexport const getArticlesRequest = () => {\n  return {\n    type: GET_ARTICLES_REQUEST,\n  };\n};\n\nexport const getArticlesSuccess = (payload) => {\n  return {\n    type: GET_ARTICLES_SUCCESS,\n    payload,\n  };\n};\n\nexport const getArticlesFailure = (payload) => {\n  return { type: GET_ARTICLES_FAILURE, payload };\n};\n\nexport const getArticles = (offset) => {\n  return async (dispatch) => {\n    dispatch(getArticlesRequest());\n    try {\n      const response = await getArticlesFetch(offset);\n      dispatch(getArticlesSuccess(response.data));\n    } catch (err) {\n      dispatch(getArticlesFailure(err));\n    }\n  };\n};\n\nexport const articleFavorited = (payload) => {\n  return { type: ARTICLE_FAVORITED, payload };\n};\n\nexport const articleUnfavorited = (payload) => {\n  return { type: ARTICLE_UNFAVORITED, payload };\n};\n\nexport const favoriteArticle = (slug) => {\n  return async (dispatch) => {\n    try {\n      const response = await favoriteArticleFetch(slug);\n      dispatch(articleFavorited(response.data));\n    } catch (err) {\n      dispatch(getArticlesFailure(err));\n    }\n  };\n};\n\nexport const unfavoriteArticle = (slug) => {\n  return async (dispatch) => {\n    try {\n      const response = await unfavoriteArticleFetch(slug);\n      dispatch(articleFavorited(response.data));\n    } catch (err) {\n      dispatch(getArticlesFailure(err));\n    }\n  };\n};\n\nexport const articlesPagination = (payload) => {\n  return { type: ARTICLES_PAGINATION, payload };\n};\n","import axios from 'axios';\r\nimport urls from './apiUrls';\r\nimport { getToken } from '../localStorage';\r\n\r\nconst getArticleFetch = async (slug) => {\r\n  const token = getToken();\r\n  const headers = { Authorization: `Token ${token}` };\r\n  const getArticleUrl = urls.getArticlePath(slug);\r\n  if (!token) {\r\n    const response = await axios.get(getArticleUrl);\r\n    return response;\r\n  }\r\n  const response = await axios.get(getArticleUrl, { headers });\r\n  return response;\r\n};\r\n\r\nexport default getArticleFetch;\r\n","import axios from 'axios';\r\nimport urls from './apiUrls';\r\nimport { getToken } from '../localStorage';\r\n\r\nconst deleteArticleFetch = async (slug) => {\r\n  const deleteArticleUrl = urls.getArticlePath(slug);\r\n  const token = getToken();\r\n  const headers = { Authorization: `Token ${token}` };\r\n  const response = await axios.delete(\r\n    deleteArticleUrl,\r\n\r\n    { headers }\r\n  );\r\n  return response;\r\n};\r\n\r\nexport default deleteArticleFetch;\r\n","import React, { useState, useEffect } from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport { withRouter, useHistory } from 'react-router-dom';\nimport './Article.scss';\nimport { LikeTwoTone } from '@ant-design/icons';\nimport { Button } from 'antd';\nimport { favoriteArticle, unfavoriteArticle } from '../../redux/actions/getArticles';\nimport getArticleFetch from '../../api/getArticle';\n\nimport { deleteArticle } from '../../redux/actions/deleteArticle';\n\nconst Article = (props) => {\n  const {\n    match: {\n      params: { slug },\n    },\n    favoriteArticleFunc,\n    unfavoriteArticleFunc,\n    username,\n    deleteProcessing,\n    deleteArticleFunc,\n  } = props;\n\n  const [article, setArticle] = useState(null);\n  const history = useHistory();\n\n  useEffect(() => {\n    getArticleFetch(slug)\n      .then((response) => response.data)\n      .then((data) => data.article)\n      .then((updatedArticle) => setArticle(() => updatedArticle));\n  }, [slug]);\n\n  if (article === null) {\n    return <div>Article is loading...</div>;\n  }\n\n  const { favorited, favoritesCount } = article;\n\n  const updateBtnHandler = () => {\n    history.push(`${process.env.PUBLIC_URL}/articles/${slug}/edit`);\n  };\n\n  const deleteBtnHandler = () => {\n    deleteArticleFunc(slug).then((answer) => {\n      if (answer.status === 200) {\n        history.push(`${process.env.PUBLIC_URL}/`);\n      }\n      // else {\n      //   console.log(answer);\n      // }\n    });\n  };\n\n  const handleLikeArticle = (evt) => {\n    evt.preventDefault();\n    evt.stopPropagation();\n    if (favorited) {\n      unfavoriteArticleFunc(slug);\n      setArticle(() => ({\n        ...article,\n        favorited: !favorited,\n        favoritesCount: favoritesCount - 1,\n      }));\n    } else {\n      favoriteArticleFunc(slug);\n      setArticle(() => ({\n        ...article,\n        favorited: !favorited,\n        favoritesCount: favoritesCount + 1,\n      }));\n    }\n  };\n\n  let likeBtnState = 'LikeButton';\n\n  if (favorited) {\n    likeBtnState = 'LikeButton LikeButton__Liked';\n  }\n\n  return (\n    <div className=\"Article\">\n      <div className=\"Article-Meta\">\n        <div className=\"Meta-Date\">{new Date(article.createdAt).toDateString()}</div>\n        <div className=\"Meta-Author\">{article.author.username}</div>\n      </div>\n      <h1 className=\"Article-Header\">{article.title}</h1>\n      <div className=\"Article-Description\">{article.description}</div>\n      <div className=\"Article-Body\">{article.body}</div>\n      <ul className=\"Article-TagsList\">\n        {article.tagList.map((tag) => (\n          <li key={tag} className=\"TagList-Item\">\n            {tag}\n          </li>\n        ))}\n      </ul>\n      <div className=\"Likes\">\n        <button className={likeBtnState} type=\"button\" onClick={handleLikeArticle}>\n          <LikeTwoTone />\n          {favoritesCount}\n        </button>\n      </div>\n      {article.author.username === username ? (\n        <div className=\"Article-Buttons\">\n          <Button className=\"Buttons-UpdateBtn\" onClick={updateBtnHandler}>\n            Update article\n          </Button>\n          <Button\n            danger\n            loading={deleteProcessing}\n            className=\"Buttons-UpdateBtn\"\n            onClick={deleteBtnHandler}\n          >\n            Delete article\n          </Button>\n          <div className=\"Article-DeliteError\" />\n        </div>\n      ) : null}\n    </div>\n  );\n};\n\nconst mapStateToProps = (state) => {\n  return {\n    username: state.auth.username,\n    deleteProcessing: state.deleteArticle.isProcessing,\n  };\n};\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    favoriteArticleFunc: (slug) => dispatch(favoriteArticle(slug)),\n    unfavoriteArticleFunc: (slug) => dispatch(unfavoriteArticle(slug)),\n    deleteArticleFunc: (slug) => dispatch(deleteArticle(slug)),\n  };\n};\n\nArticle.propTypes = {\n  username: PropTypes.string.isRequired,\n  deleteProcessing: PropTypes.bool.isRequired,\n  deleteArticleFunc: PropTypes.func.isRequired,\n  match: PropTypes.shape({\n    params: PropTypes.shape({\n      slug: PropTypes.string.isRequired,\n    }),\n  }).isRequired,\n  favoriteArticleFunc: PropTypes.func.isRequired,\n  unfavoriteArticleFunc: PropTypes.func.isRequired,\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(withRouter(Article));\n","import deleteAticleFetch from '../../api/deleteArticle';\nimport {\n  DELETE_ARTICLE_REQUEST,\n  DELETE_ARTICLE_SUCCESS,\n  DELETE_ARTICLE_FAILURE,\n} from './actionTypes';\n\nexport const deleteArticleRequest = () => {\n  return {\n    type: DELETE_ARTICLE_REQUEST,\n  };\n};\n\nexport const deleteArticleSuccess = () => {\n  return {\n    type: DELETE_ARTICLE_SUCCESS,\n  };\n};\n\nexport const deleteArticleFailure = (payload) => {\n  return { type: DELETE_ARTICLE_FAILURE, payload };\n};\n\nexport const deleteArticle = (slug) => {\n  return async (dispatch) => {\n    dispatch(deleteArticleRequest());\n    try {\n      const response = await deleteAticleFetch(slug);\n      dispatch(deleteArticleSuccess());\n      return response;\n    } catch (err) {\n      dispatch(deleteArticleFailure(err.response.data.errors));\n      return err;\n    }\n  };\n};\n","import React from 'react';\nimport './ArticlePreview.scss';\nimport { LikeTwoTone } from '@ant-design/icons';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport { useHistory } from 'react-router-dom';\nimport { favoriteArticle, unfavoriteArticle } from '../../redux/actions/getArticles';\n\nconst ArticlePreview = (props) => {\n  const {\n    article: {\n      slug,\n      title,\n      description,\n      tagList,\n      favorited,\n      favoritesCount,\n      createdAt,\n      author: { username },\n    },\n    favoriteArticleFunc,\n    unfavoriteArticleFunc,\n  } = props;\n\n  const history = useHistory();\n\n  const toArticlePage = (evt) => {\n    evt.preventDefault();\n    history.push(`${process.env.PUBLIC_URL}/articles/${slug}`);\n  };\n\n  const handleLikeArticle = (evt) => {\n    evt.preventDefault();\n    evt.stopPropagation();\n    if (favorited) {\n      unfavoriteArticleFunc(slug);\n    } else {\n      favoriteArticleFunc(slug);\n    }\n  };\n\n  let likeBtnState = 'LikeButton';\n\n  if (favorited) {\n    likeBtnState = 'LikeButton LikeButton__Liked';\n  }\n  // const { username } = props.article.author;\n  return (\n    <div\n      className=\"ArticlePreview\"\n      onClick={toArticlePage}\n      onKeyDown={toArticlePage}\n      role=\"button\"\n      tabIndex=\"0\"\n    >\n      <div className=\"ArticlePreview-AuthorDateLikesRow\">\n        <div className=\"AuthorDate\">\n          <span className=\"Author\">{username}</span>\n          <span className=\"Date\">{new Date(createdAt).toDateString()}</span>\n        </div>\n        <div className=\"Likes\">\n          <button className={likeBtnState} type=\"button\" onClick={handleLikeArticle}>\n            <LikeTwoTone />\n            {favoritesCount}\n          </button>\n        </div>\n      </div>\n      <div className=\"ArticlePreview-HeaderDescriptionRow\">\n        <h1>{title}</h1>\n        <span>{description}</span>\n      </div>\n      <div className=\"ArticlePreview-TagsRow\">\n        <ul className=\"TagList\">\n          {tagList.map((tag) => (\n            <li className=\"TagList-Item\" key={tag}>\n              {tag}\n            </li>\n          ))}\n        </ul>\n      </div>\n    </div>\n  );\n};\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    favoriteArticleFunc: (slug) => dispatch(favoriteArticle(slug)),\n    unfavoriteArticleFunc: (slug) => dispatch(unfavoriteArticle(slug)),\n  };\n};\n\nArticlePreview.propTypes = {\n  article: PropTypes.shape({\n    slug: PropTypes.string.isRequired,\n    title: PropTypes.string.isRequired,\n    description: PropTypes.string.isRequired,\n    tagList: PropTypes.array.isRequired,\n    favorited: PropTypes.bool.isRequired,\n    favoritesCount: PropTypes.number.isRequired,\n    createdAt: PropTypes.string.isRequired,\n    author: PropTypes.shape({ username: PropTypes.string.isRequired }).isRequired,\n  }).isRequired,\n  favoriteArticleFunc: PropTypes.func.isRequired,\n  unfavoriteArticleFunc: PropTypes.func.isRequired,\n};\n\nexport default connect(null, mapDispatchToProps)(ArticlePreview);\n","import React from 'react';\nimport { Pagination } from 'antd';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport { articlesPagination } from '../../redux/actions/getArticles';\n\nconst MyPagination = (props) => {\n  const { articlesCount, currentPage, switchPage } = props;\n\n  const changePageHandler = (page) => {\n    switchPage({ currentPage: page });\n  };\n\n  return (\n    <Pagination\n      showSizeChanger={false}\n      current={currentPage}\n      total={articlesCount}\n      onChange={changePageHandler}\n    />\n  );\n};\n\nconst mapStateToProps = (state) => {\n  return {\n    articlesCount: state.getArticles.articlesCount,\n    currentPage: state.getArticles.currentPage,\n  };\n};\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    switchPage: (currentPage) => dispatch(articlesPagination(currentPage)),\n  };\n};\n\nMyPagination.propTypes = {\n  articlesCount: PropTypes.number.isRequired,\n  currentPage: PropTypes.number.isRequired,\n  switchPage: PropTypes.func.isRequired,\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(MyPagination);\n","import React, { useEffect } from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport ArticlePreview from '../ArticlePreview/ArticlePreview';\nimport { getArticles } from '../../redux/actions/getArticles';\nimport ArticlesPagination from '../ArticlesPagination/ArticlesPagination';\nimport './ArticleList.scss';\n\nconst ArticleList = (props) => {\n  const { articles, isLoading, errors, getArticlesFunc, offset } = props;\n\n  useEffect(() => {\n    getArticlesFunc(offset);\n  }, [getArticlesFunc, offset]);\n\n  if (isLoading) {\n    return <div>Articles is loading...</div>;\n  }\n\n  if (errors) {\n    return <div>Something went wrong {errors}</div>;\n  }\n\n  return (\n    <div className=\"ArticleList\">\n      {articles.map((article) => (\n        <ArticlePreview key={article.slug} article={article} />\n      ))}\n      <ArticlesPagination />\n    </div>\n  );\n};\n\nconst mapStateToProps = (state) => {\n  return {\n    articles: state.getArticles.articles,\n    isLoading: state.getArticles.isLoading,\n    errors: state.getArticles.errors,\n    offset:\n      state.getArticles.currentPage === 1\n        ? 0\n        : Math.floor((state.getArticles.currentPage - 1) * 10),\n  };\n};\n\nconst mapDispatchToProps = (dispatch) => {\n  return { getArticlesFunc: (offset) => dispatch(getArticles(offset)) };\n};\n\nArticleList.propTypes = {\n  articles: PropTypes.arrayOf(PropTypes.object).isRequired,\n  isLoading: PropTypes.bool.isRequired,\n  errors: PropTypes.oneOfType([PropTypes.string, PropTypes.object]).isRequired,\n  getArticlesFunc: PropTypes.func.isRequired,\n  offset: PropTypes.number.isRequired,\n  // articles: PropTypes.shape({ map: PropTypes.func.isRequired }).isRequired,\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ArticleList);\n","const routesPaths = {\r\n  getHome: () => `${process.env.PUBLIC_URL}/`,\r\n  getArticle: () => `${process.env.PUBLIC_URL}/articles/:slug`,\r\n  getReg: () => `${process.env.PUBLIC_URL}/signup`,\r\n  getAuth: () => `${process.env.PUBLIC_URL}/login`,\r\n  getCreateArticle: () => `${process.env.PUBLIC_URL}/add`,\r\n  getArticleEditor: () => `${process.env.PUBLIC_URL}/articles/:slug/edit`,\r\n};\r\n\r\nexport default routesPaths;\r\n","import React from 'react';\r\nimport { NavLink } from 'react-router-dom';\r\nimport PropTypes from 'prop-types';\r\nimport './Navigation.scss';\r\nimport routesPaths from '../../routesPaths';\r\n\r\nconst Navigation = (props) => {\r\n  const { isLogIn } = props;\r\n\r\n  const notAuthLinks = (\r\n    <nav className=\"Navigation\">\r\n      <NavLink exact className=\"Navigation-Link\" to={routesPaths.getHome()}>\r\n        Home page\r\n      </NavLink>\r\n      <NavLink className=\"Navigation-Link\" to={routesPaths.getAuth()}>\r\n        Log in\r\n      </NavLink>\r\n      <NavLink className=\"Navigation-Link\" to={routesPaths.getReg()}>\r\n        Signup\r\n      </NavLink>\r\n    </nav>\r\n  );\r\n\r\n  const authLinks = (\r\n    <nav className=\"Navigation\">\r\n      <NavLink className=\"Navigation-Link\" to={routesPaths.getHome()} exact>\r\n        Home page\r\n      </NavLink>\r\n      <NavLink className=\"Navigation-Link\" to={routesPaths.getCreateArticle()}>\r\n        Create article\r\n      </NavLink>\r\n    </nav>\r\n  );\r\n\r\n  return isLogIn ? authLinks : notAuthLinks;\r\n};\r\n\r\nNavigation.propTypes = {\r\n  isLogIn: PropTypes.bool.isRequired,\r\n};\r\n\r\nexport default Navigation;\r\n","import * as Yup from 'yup';\n\nconst updateArticleSchema = Yup.object().shape({\n  title: Yup.string().required('Required'),\n  description: Yup.string().required('Required'),\n  content: Yup.string().required('Required'),\n  tags: Yup.string(),\n});\nexport default updateArticleSchema;\n","import axios from 'axios';\r\nimport urls from './apiUrls';\r\nimport { getToken } from '../localStorage';\r\n\r\nconst updateArticleFetch = async (data, slug) => {\r\n  const updateArticleUrl = urls.getArticlePath(slug);\r\n  const token = getToken();\r\n  const headers = { Authorization: `Token ${token}` };\r\n  const response = await axios.put(\r\n    updateArticleUrl,\r\n    {\r\n      article: data,\r\n    },\r\n    { headers }\r\n  );\r\n  return response;\r\n};\r\n\r\nexport default updateArticleFetch;\r\n","import React, { useState, useEffect } from 'react';\nimport './ArticleEditor.scss';\nimport { connect } from 'react-redux';\nimport { withRouter, useHistory } from 'react-router-dom';\nimport { Formik, Form } from 'formik';\nimport { Input, Button } from 'antd';\nimport PropTypes from 'prop-types';\nimport updateArticleSchema from './updateArticleSchema';\nimport getArticleFetch from '../../api/getArticle';\nimport { updateArticle } from '../../redux/actions/updateArticle';\n\nconst { TextArea } = Input;\n\nconst ArticleEditor = (props) => {\n  const {\n    match: {\n      params: { slug },\n    },\n    updateArticleFunc,\n    isProcessing,\n  } = props;\n\n  const [article, setArticle] = useState(null);\n  const [response, setResponse] = useState('');\n  const history = useHistory();\n\n  useEffect(() => {\n    getArticleFetch(slug)\n      .then((answer) => answer.data)\n      .then((data) => data.article)\n      .then((updatedArticle) => setArticle(() => updatedArticle));\n  }, [slug]);\n\n  if (article === null) {\n    return <div>Article is loading...</div>;\n  }\n\n  const renderInput = (\n    name,\n    type,\n    label,\n    values,\n    handleChange,\n    handleBlur,\n    errors,\n    touched,\n    Component\n  ) => (\n    <label className=\"ArticleEditor-Label\" htmlFor={name}>\n      {`${label}`}\n      <Component\n        className=\"ArticleEditor-Field\"\n        type={type}\n        name={name}\n        placeholder={label}\n        id={name}\n        onChange={handleChange}\n        onBlur={handleBlur}\n        value={values[name]}\n        style={touched[name] && errors[name] ? { borderColor: 'red' } : {}} //\n      />\n      {touched[name] && errors[name] && (\n        <div className=\"ArticleEditor-RequiredField\">{errors[name]}</div>\n      )}\n    </label>\n  );\n\n  const initialValues = {\n    title: article.title,\n    description: article.description,\n    content: article.body,\n    tags: article.tagList.length > 0 ? article.tagList.join(', ') : '',\n  };\n\n  const renderForm = () => {\n    return (\n      <div className=\"ArticleEditor\">\n        <h1>Update article</h1>\n        <div className=\"ArticleEditor-FormWrapper\">\n          <Formik\n            initialValues={initialValues}\n            validationSchema={updateArticleSchema}\n            onSubmit={(values) => {\n              const { title, description, content, tags } = values;\n              const tagList = tags === '' ? [] : tags.split(',');\n              try {\n                updateArticleFunc(\n                  { title, description, body: content, tagList },\n                  article.slug\n                ).then((updatedArticle) => {\n                  history.push(`${process.env.PUBLIC_URL}/articles/${updatedArticle.slug}`);\n                });\n              } catch (err) {\n                setResponse(() => `Somthing going wrong: ${err}`);\n              }\n            }}\n          >\n            {({ values, handleChange, errors, touched, handleBlur, handleSubmit }) => (\n              <Form className=\"ArticleEditor-Form\" onSubmit={handleSubmit}>\n                {renderInput(\n                  'title',\n                  'text',\n                  'Title',\n                  values,\n                  handleChange,\n                  handleBlur,\n                  errors,\n                  touched,\n                  Input\n                )}\n                {renderInput(\n                  'description',\n                  'text',\n                  'Description',\n                  values,\n                  handleChange,\n                  handleBlur,\n                  errors,\n                  touched,\n                  Input\n                )}\n                {renderInput(\n                  'content',\n                  'text',\n                  'Article content',\n                  values,\n                  handleChange,\n                  handleBlur,\n                  errors,\n                  touched,\n                  TextArea\n                )}\n                {renderInput(\n                  'tags',\n                  'text',\n                  'Tags',\n                  values,\n                  handleChange,\n                  handleBlur,\n                  errors,\n                  touched,\n                  Input\n                )}\n                <Button\n                  loading={isProcessing}\n                  className=\"SubmitBtn Btn\"\n                  type=\"primary\"\n                  htmlType=\"submit\"\n                >\n                  Update article\n                </Button>\n              </Form>\n            )}\n          </Formik>\n          <div className=\"ArticleEditor-Response\">{response}</div>\n        </div>\n      </div>\n    );\n  };\n\n  return renderForm();\n};\n\nconst mapStateToProps = (state) => {\n  return {\n    isProcessing: state.updateArticle.isProcessing,\n  };\n};\n\nconst mapDispatchToProps = (dispatch) => ({\n  updateArticleFunc: (data, slug) => dispatch(updateArticle(data, slug)),\n});\n\nArticleEditor.propTypes = {\n  updateAricleFunc: PropTypes.func,\n  isProcessing: PropTypes.bool,\n  response: PropTypes.string,\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(withRouter(ArticleEditor));\n","import updateAticleFetch from '../../api/updateArticle';\nimport {\n  UPDATE_ARTICLE_REQUEST,\n  UPDATE_ARTICLE_SUCCESS,\n  UPDATE_ARTICLE_FAILURE,\n} from './actionTypes';\n\nexport const updateArticleRequest = () => {\n  return {\n    type: UPDATE_ARTICLE_REQUEST,\n  };\n};\n\nexport const updateArticleSuccess = () => {\n  return {\n    type: UPDATE_ARTICLE_SUCCESS,\n  };\n};\n\nexport const updateArticleFailure = (payload) => {\n  return { type: UPDATE_ARTICLE_FAILURE, payload };\n};\n\nexport const updateArticle = (data, slug) => {\n  return async (dispatch) => {\n    dispatch(updateArticleRequest());\n    try {\n      const response = await updateAticleFetch(data, slug);\n      dispatch(updateArticleSuccess());\n      return response.data.article;\n    } catch (err) {\n      dispatch(updateArticleFailure(err.response.data.errors));\n      return err;\n    }\n  };\n};\n","import React from 'react';\r\nimport { Route, Redirect } from 'react-router-dom';\r\nimport PropTypes from 'prop-types';\r\nimport routesPaths from '../../routesPaths';\r\n\r\nconst PublicRoute = ({ component: Component, isLogin, restricted, ...rest }) => {\r\n  return (\r\n    <Route\r\n      {...rest}\r\n      render={(props) =>\r\n        isLogin && restricted ? <Redirect to={routesPaths.getHome()} /> : <Component {...props} />\r\n      }\r\n    />\r\n  );\r\n};\r\n\r\nPublicRoute.propTypes = {\r\n  isLogin: PropTypes.bool.isRequired,\r\n  restricted: PropTypes.bool.isRequired,\r\n  component: PropTypes.elementType.isRequired,\r\n};\r\n\r\nexport default PublicRoute;\r\n","import React from 'react';\r\nimport { Route, Redirect } from 'react-router-dom';\r\nimport PropTypes from 'prop-types';\r\nimport routesPaths from '../../routesPaths';\r\n\r\nconst PrivateRoute = ({ component: Component, isLogin, ...rest }) => {\r\n  return (\r\n    // Show the component only when the user is logged in\r\n    // Otherwise, redirect the user to / page\r\n    <Route\r\n      {...rest}\r\n      render={(props) =>\r\n        isLogin ? <Component {...props} /> : <Redirect to={routesPaths.getHome()} />\r\n      }\r\n    />\r\n  );\r\n};\r\n\r\nPrivateRoute.propTypes = {\r\n  isLogin: PropTypes.bool.isRequired,\r\n  component: PropTypes.elementType.isRequired,\r\n};\r\n\r\nexport default PrivateRoute;\r\n","import './App.scss';\r\nimport React, { useEffect } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { Switch, Redirect } from 'react-router-dom';\r\nimport PropTypes from 'prop-types';\r\nimport RegForm from './components/RegForm/RegForm';\r\nimport AuthForm from './components/AuthForm/AuthForm';\r\nimport UserBio from './components/UserBio/UserBio';\r\nimport CreateArticle from './components/CreateArticle/CreateArticle';\r\nimport { autoLogIn } from './redux/actions/auth';\r\nimport Layout from './hoc/Layout/Layout';\r\nimport Article from './components/Article/Article';\r\nimport ArticleList from './components/ArticleList/ArticleList';\r\nimport Navigation from './components/Navigation/Navigation';\r\nimport ArticleEditor from './components/ArticleEditor/ArticleEditor';\r\nimport routesPaths from './routesPaths';\r\nimport PublicRoute from './hoc/PublicRoute/PublicRoute';\r\nimport PrivateRoute from './hoc/PrivateRoute/PrivateRoute';\r\n\r\nfunction App(props) {\r\n  const { isAuth, autoLogInFunc } = props;\r\n\r\n  useEffect(() => {\r\n    autoLogInFunc();\r\n  });\r\n\r\n  const routes = (\r\n    <div className=\"App\">\r\n      <Navigation isLogIn={isAuth} />\r\n      <UserBio isLogin={isAuth} />\r\n      <Switch>\r\n        <PublicRoute\r\n          exact\r\n          path={routesPaths.getHome()}\r\n          isLogin={isAuth}\r\n          restricted={false}\r\n          component={ArticleList}\r\n        />\r\n        <PublicRoute\r\n          exact\r\n          path={routesPaths.getArticle()}\r\n          isLogin={isAuth}\r\n          restricted={false}\r\n          component={Article}\r\n        />\r\n        <PublicRoute\r\n          exact\r\n          path={routesPaths.getReg()}\r\n          isLogin={isAuth}\r\n          restricted\r\n          component={RegForm}\r\n        />\r\n        <PublicRoute\r\n          exact\r\n          path={routesPaths.getAuth()}\r\n          isLogin={isAuth}\r\n          restricted\r\n          component={AuthForm}\r\n        />\r\n        <PrivateRoute\r\n          exact\r\n          path={routesPaths.getArticleEditor()}\r\n          isLogin={isAuth}\r\n          component={ArticleEditor}\r\n        />\r\n        <PrivateRoute\r\n          exact\r\n          path={routesPaths.getCreateArticle()}\r\n          isLogin={isAuth}\r\n          component={CreateArticle}\r\n        />\r\n\r\n        <Redirect to={routesPaths.getHome()} />\r\n      </Switch>\r\n    </div>\r\n  );\r\n\r\n  return <Layout>{routes}</Layout>;\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    isAuth: !!state.auth.token,\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n  autoLogInFunc: () => dispatch(autoLogIn()),\r\n});\r\n\r\nApp.propTypes = {\r\n  isAuth: PropTypes.bool.isRequired,\r\n  autoLogInFunc: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(App);\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'antd/dist/antd.css';\nimport './index.scss';\nimport { createStore, applyMiddleware, compose } from 'redux';\nimport { Provider } from 'react-redux';\nimport thunk from 'redux-thunk';\nimport { BrowserRouter } from 'react-router-dom';\nimport rootReducer from './redux/redusers/rootReduser';\nimport * as serviceWorker from './serviceWorker';\nimport App from './App';\n\nconst composeEnhancers =\n  typeof window === 'object' && window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__\n    ? window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__({\n        // Specify extension’s options like name, actionsBlacklist, actionsCreators, serialize...\n      })\n    : compose;\n\nconst store = createStore(rootReducer, composeEnhancers(applyMiddleware(thunk)));\n\nconst app = (\n  <BrowserRouter>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </BrowserRouter>\n);\n\nReactDOM.render(app, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}